#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_7_2-3-gee82a7 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.edg.data.replication.optorsim.infrastructure.GridJob
	c5068 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.GridJob" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./GridJob.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridJob </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _name : String </td></tr>
<tr><td align="left" balign="left"> - _jobScheduled : long </td></tr>
<tr><td align="left" balign="left"> - _jobStarted : long </td></tr>
<tr><td align="left" balign="left"> - _probability : double </td></tr>
<tr><td align="left" balign="left"> - _id : int </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
<tr><td align="left" balign="left"> - _latency : double </td></tr>
<tr><td align="left" balign="left"> - _linearFactor : double </td></tr>
<tr><td align="left" balign="left"> - _fileFraction : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + assignID(id : int) </td></tr>
<tr><td align="left" balign="left"> + assignProbability(p : double) </td></tr>
<tr><td align="left" balign="left"> + setLatency(latency : double) </td></tr>
<tr><td align="left" balign="left"> + setLinearFactor(linearFactor : double) </td></tr>
<tr><td align="left" balign="left"> + setFileFraction(fileFraction : float) </td></tr>
<tr><td align="left" balign="left"> + getLatency() : double </td></tr>
<tr><td align="left" balign="left"> + getLinearFactor() : double </td></tr>
<tr><td align="left" balign="left"> + getFileFraction() : float </td></tr>
<tr><td align="left" balign="left"> + probability() : double </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + name() : String </td></tr>
<tr><td align="left" balign="left"> + equals(a : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + cloneJob() : GridJob </td></tr>
<tr><td align="left" balign="left"> + scheduled() </td></tr>
<tr><td align="left" balign="left"> + started() </td></tr>
<tr><td align="left" balign="left"> + timeScheduled() : long </td></tr>
<tr><td align="left" balign="left"> + timeStarted() : long </td></tr>
<tr><td align="left" balign="left"> + trimJob() </td></tr>
		</table></td></tr>
		</table>>, URL="./GridJob.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.edg.data.replication.optorsim.infrastructure.GridJob extends java.util.Vector
	c5115:p -> c5068:p [dir=back,arrowtail=empty];
	// java.util.Vector<E>
	c5115 [label=<<table title="java.util.Vector" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Vector.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> java.util.Vector&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # elementData : java.lang.Object[] </td></tr>
<tr><td align="left" balign="left"> # elementCount : int </td></tr>
<tr><td align="left" balign="left"> # capacityIncrement : int </td></tr>
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - MAX_ARRAY_SIZE : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + copyInto(arg0 : java.lang.Object[]) </td></tr>
<tr><td align="left" balign="left"> + trimToSize() </td></tr>
<tr><td align="left" balign="left"> + ensureCapacity(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - ensureCapacityHelper(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - grow(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - hugeCapacity(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + setSize(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + capacity() : int </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + elements() : java.util.Enumeration&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : java.lang.Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : java.lang.Object) : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : java.lang.Object, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : java.lang.Object) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : java.lang.Object, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + elementAt(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + firstElement() : E </td></tr>
<tr><td align="left" balign="left"> + lastElement() : E </td></tr>
<tr><td align="left" balign="left"> + setElementAt(arg0 : E, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + removeElementAt(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + insertElementAt(arg0 : E, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + addElement(arg0 : E) </td></tr>
<tr><td align="left" balign="left"> + removeElement(arg0 : java.lang.Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeAllElements() </td></tr>
<tr><td align="left" balign="left"> + clone() : java.lang.Object </td></tr>
<tr><td align="left" balign="left"> + toArray() : java.lang.Object[] </td></tr>
<tr><td align="left" balign="left"> + toArray(arg0 : T[]) : T[] </td></tr>
<tr><td align="left" balign="left"> ~ elementData(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + get(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + set(arg0 : int, arg1 : E) : E </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : java.lang.Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : int, arg1 : E) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + containsAll(arg0 : java.util.Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(arg0 : java.util.Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeAll(arg0 : java.util.Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + retainAll(arg0 : java.util.Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(arg0 : int, arg1 : java.util.Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : java.lang.Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + toString() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + subList(arg0 : int, arg1 : int) : java.util.List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> # removeRange(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : java.io.ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> + listIterator(arg0 : int) : java.util.ListIterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + listIterator() : java.util.ListIterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + iterator() : java.util.Iterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + forEach(arg0 : java.util.function.Consumer&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + removeIf(arg0 : java.util.function.Predicate&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + replaceAll(arg0 : java.util.function.UnaryOperator&lt;E&gt;) </td></tr>
<tr><td align="left" balign="left"> + sort(arg0 : java.util.Comparator&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + spliterator() : java.util.Spliterator&lt;E&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Vector.html", fontname="arial", fontcolor="black", fontsize=10.0];
}

