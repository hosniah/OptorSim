#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_7_2-3-gee82a7 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.edg.data.replication.optorsim.optor.SimpleStorageElement
	c920 [label=<<table title="org.edg.data.replication.optorsim.optor.SimpleStorageElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SimpleStorageElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SimpleStorageElement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _site : GridSite </td></tr>
<tr><td align="left" balign="left"> - _seId : int </td></tr>
<tr><td align="left" balign="left"> - _seName : String </td></tr>
<tr><td align="left" balign="left"> - _capacity : long </td></tr>
<tr><td align="left" balign="left"> - _volumeFilled : long </td></tr>
<tr><td align="left" balign="left"> - _storage : Hashtable&lt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + isFull() : boolean </td></tr>
<tr><td align="left" balign="left"> + getGridSite() : GridSite </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getAvailableSpace() : long </td></tr>
<tr><td align="left" balign="left"> + getCapacity() : long </td></tr>
<tr><td align="left" balign="left"> + getStatistics() : Statistics </td></tr>
<tr><td align="left" balign="left"> + getAllFiles() : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + numberOfStoredFiles() : int </td></tr>
<tr><td align="left" balign="left"> + reserveSpace(filesize : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + addFile(file : DataFile) : boolean </td></tr>
<tr><td align="left" balign="left"> + listFiles() : String </td></tr>
<tr><td align="left" balign="left"> + addPreReservedFile(file : DataFile) </td></tr>
<tr><td align="left" balign="left"> + removeFile(file : DataFile) </td></tr>
<tr><td align="left" balign="left"> + hasFile(lfn : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + requestFile(filename : String) : DataFile </td></tr>
<tr><td align="left" balign="left"> + accessFile(file : DataFile) </td></tr>
<tr><td align="left" balign="left"> + filesToDelete(file : DataFile) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + isTherePotentialAvailableSpace(newFile : DataFile) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./SimpleStorageElement.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.optor.LruStorageElement
	c925 [label=<<table title="org.edg.data.replication.optorsim.optor.LruStorageElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./LruStorageElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LruStorageElement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + filesToDelete(newFile : DataFile) : List&lt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./LruStorageElement.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.optor.LfuStorageElement
	c927 [label=<<table title="org.edg.data.replication.optorsim.optor.LfuStorageElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./LfuStorageElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LfuStorageElement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + filesToDelete(newFile : DataFile) : List&lt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./LfuStorageElement.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.optor.EconomicZipfStorageElement
	c931 [label=<<table title="org.edg.data.replication.optorsim.optor.EconomicZipfStorageElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EconomicZipfStorageElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EconomicZipfStorageElement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + evaluateFileWorth(fileId : int) : double </td></tr>
<tr><td align="left" balign="left"> + filesToDelete(newFile : DataFile) : List&lt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./EconomicZipfStorageElement.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.optor.EconomicBinomialStorageElement
	c933 [label=<<table title="org.edg.data.replication.optorsim.optor.EconomicBinomialStorageElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EconomicBinomialStorageElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EconomicBinomialStorageElement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _barF : float </td></tr>
<tr><td align="left" balign="left"> - _S : float </td></tr>
<tr><td align="left" balign="left"> - _n : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + evaluateFileWorth(fileId : int) : double </td></tr>
<tr><td align="left" balign="left"> + filesToDelete(newFile : DataFile) : List&lt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./EconomicBinomialStorageElement.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.optor.AccessHistoryStorageElement
	c935 [label=<<table title="org.edg.data.replication.optorsim.optor.AccessHistoryStorageElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./AccessHistoryStorageElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AccessHistoryStorageElement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + _accessHistory : TreeMap&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getRecentAccessHistory(dt : long) : TreeMap&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getRecentAccessHistoryIndices(dt : long) : TreeMap&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + accessFile(file : DataFile) </td></tr>
		</table></td></tr>
		</table>>, URL="./AccessHistoryStorageElement.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.edg.data.replication.optorsim.optor.LruStorageElement extends org.edg.data.replication.optorsim.optor.AccessHistoryStorageElement
	c935:p -> c925:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.optor.LfuStorageElement extends org.edg.data.replication.optorsim.optor.AccessHistoryStorageElement
	c935:p -> c927:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.optor.EconomicZipfStorageElement extends org.edg.data.replication.optorsim.optor.AccessHistoryStorageElement
	c935:p -> c931:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.optor.EconomicBinomialStorageElement extends org.edg.data.replication.optorsim.optor.AccessHistoryStorageElement
	c935:p -> c933:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.optor.AccessHistoryStorageElement extends org.edg.data.replication.optorsim.optor.SimpleStorageElement
	c920:p -> c935:p [dir=back,arrowtail=empty];
}

