#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_7_2-3-gee82a7 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.edg.data.replication.optorsim.SEDataThread
	c9094 [label=<<table title="org.edg.data.replication.optorsim.SEDataThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./SEDataThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SEDataThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - nodeChoice : String </td></tr>
<tr><td align="left" balign="left"> - ONE_SECOND : int </td></tr>
<tr><td align="left" balign="left"> - samplingDelay : int </td></tr>
<tr><td align="left" balign="left"> - _gc : GridContainer </td></tr>
<tr><td align="left" balign="left"> - time : GridTime </td></tr>
<tr><td align="left" balign="left"> - site : GridSite </td></tr>
<tr><td align="left" balign="left"> - timeSecs : int </td></tr>
<tr><td align="left" balign="left"> - capacity : long </td></tr>
<tr><td align="left" balign="left"> - paused : boolean </td></tr>
<tr><td align="left" balign="left"> - printingAll : boolean </td></tr>
<tr><td align="left" balign="left"> - processingJobs : boolean </td></tr>
<tr><td align="left" balign="left"> - passData : boolean </td></tr>
<tr><td align="left" balign="left"> - prevUsage : float </td></tr>
<tr><td align="left" balign="left"> - prevPrevUsage : float </td></tr>
<tr><td align="left" balign="left"> - seriesSEUVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - pieDataset : DefaultPieDataset </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getElement() : String </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + pause() </td></tr>
<tr><td align="left" balign="left"> + unPause() </td></tr>
<tr><td align="left" balign="left"> + setSampleRate(rate : float) </td></tr>
<tr><td align="left" balign="left"> + changePrintingAll() </td></tr>
<tr><td align="left" balign="left"> + currView(currViewingNode : String) </td></tr>
<tr><td align="left" balign="left"> + sendDatatoGUI() </td></tr>
<tr><td align="left" balign="left"> + falsifyProcessingJobs() </td></tr>
		</table></td></tr>
		</table>>, URL="./SEDataThread.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.edg.data.replication.optorsim.SEDataThread extends java.lang.Thread
	c9187:p -> c9094:p [dir=back,arrowtail=empty];
	// java.lang.Thread
	c9187 [label=<<table title="java.lang.Thread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Thread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> java.lang.Thread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - name : char[] </td></tr>
<tr><td align="left" balign="left"> - priority : int </td></tr>
<tr><td align="left" balign="left"> - threadQ : java.lang.Thread </td></tr>
<tr><td align="left" balign="left"> - eetop : long </td></tr>
<tr><td align="left" balign="left"> - single_step : boolean </td></tr>
<tr><td align="left" balign="left"> - daemon : boolean </td></tr>
<tr><td align="left" balign="left"> - stillborn : boolean </td></tr>
<tr><td align="left" balign="left"> - target : java.lang.Runnable </td></tr>
<tr><td align="left" balign="left"> - group : java.lang.ThreadGroup </td></tr>
<tr><td align="left" balign="left"> - contextClassLoader : java.lang.ClassLoader </td></tr>
<tr><td align="left" balign="left"> - inheritedAccessControlContext : java.security.AccessControlContext </td></tr>
<tr><td align="left" balign="left"> - threadInitNumber : int </td></tr>
<tr><td align="left" balign="left"> ~ threadLocals : java.lang.ThreadLocal.ThreadLocalMap </td></tr>
<tr><td align="left" balign="left"> ~ inheritableThreadLocals : java.lang.ThreadLocal.ThreadLocalMap </td></tr>
<tr><td align="left" balign="left"> - stackSize : long </td></tr>
<tr><td align="left" balign="left"> - nativeParkEventPointer : long </td></tr>
<tr><td align="left" balign="left"> - tid : long </td></tr>
<tr><td align="left" balign="left"> - threadSeqNumber : long </td></tr>
<tr><td align="left" balign="left"> - threadStatus : int </td></tr>
<tr><td align="left" balign="left"> ~ parkBlocker : java.lang.Object </td></tr>
<tr><td align="left" balign="left"> - blocker : sun.nio.ch.Interruptible </td></tr>
<tr><td align="left" balign="left"> - blockerLock : java.lang.Object </td></tr>
<tr><td align="left" balign="left"> + MIN_PRIORITY : int </td></tr>
<tr><td align="left" balign="left"> + NORM_PRIORITY : int </td></tr>
<tr><td align="left" balign="left"> + MAX_PRIORITY : int </td></tr>
<tr><td align="left" balign="left"> - EMPTY_STACK_TRACE : java.lang.StackTraceElement[] </td></tr>
<tr><td align="left" balign="left"> - SUBCLASS_IMPLEMENTATION_PERMISSION : java.lang.RuntimePermission </td></tr>
<tr><td align="left" balign="left"> - uncaughtExceptionHandler : java.lang.Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> - defaultUncaughtExceptionHandler : java.lang.Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> ~ threadLocalRandomSeed : long </td></tr>
<tr><td align="left" balign="left"> ~ threadLocalRandomProbe : int </td></tr>
<tr><td align="left" balign="left"> ~ threadLocalRandomSecondarySeed : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - registerNatives() </td></tr>
<tr><td align="left" balign="left"> - nextThreadNum() : int </td></tr>
<tr><td align="left" balign="left"> - nextThreadID() : long </td></tr>
<tr><td align="left" balign="left"> ~ blockedOn(arg0 : sun.nio.ch.Interruptible) </td></tr>
<tr><td align="left" balign="left"> + currentThread() : java.lang.Thread </td></tr>
<tr><td align="left" balign="left"> + yield() </td></tr>
<tr><td align="left" balign="left"> + sleep(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + sleep(arg0 : long, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> - init(arg0 : java.lang.ThreadGroup, arg1 : java.lang.Runnable, arg2 : java.lang.String, arg3 : long) </td></tr>
<tr><td align="left" balign="left"> - init(arg0 : java.lang.ThreadGroup, arg1 : java.lang.Runnable, arg2 : java.lang.String, arg3 : long, arg4 : java.security.AccessControlContext) </td></tr>
<tr><td align="left" balign="left"> # clone() : java.lang.Object </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
<tr><td align="left" balign="left"> - start0() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> - exit() </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + stop(arg0 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> + interrupt() </td></tr>
<tr><td align="left" balign="left"> + interrupted() : boolean </td></tr>
<tr><td align="left" balign="left"> + isInterrupted() : boolean </td></tr>
<tr><td align="left" balign="left"> - isInterrupted(arg0 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + destroy() </td></tr>
<tr><td align="left" balign="left"> + isAlive() : boolean </td></tr>
<tr><td align="left" balign="left"> + suspend() </td></tr>
<tr><td align="left" balign="left"> + resume() </td></tr>
<tr><td align="left" balign="left"> + setPriority(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getPriority() : int </td></tr>
<tr><td align="left" balign="left"> + setName(arg0 : java.lang.String) </td></tr>
<tr><td align="left" balign="left"> + getName() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getThreadGroup() : java.lang.ThreadGroup </td></tr>
<tr><td align="left" balign="left"> + activeCount() : int </td></tr>
<tr><td align="left" balign="left"> + enumerate(arg0 : java.lang.Thread[]) : int </td></tr>
<tr><td align="left" balign="left"> + countStackFrames() : int </td></tr>
<tr><td align="left" balign="left"> + join(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + join(arg0 : long, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + join() </td></tr>
<tr><td align="left" balign="left"> + dumpStack() </td></tr>
<tr><td align="left" balign="left"> + setDaemon(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isDaemon() : boolean </td></tr>
<tr><td align="left" balign="left"> + checkAccess() </td></tr>
<tr><td align="left" balign="left"> + toString() : java.lang.String </td></tr>
<tr><td align="left" balign="left"> + getContextClassLoader() : java.lang.ClassLoader </td></tr>
<tr><td align="left" balign="left"> + setContextClassLoader(arg0 : java.lang.ClassLoader) </td></tr>
<tr><td align="left" balign="left"> + holdsLock(arg0 : java.lang.Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getStackTrace() : java.lang.StackTraceElement[] </td></tr>
<tr><td align="left" balign="left"> + getAllStackTraces() : java.util.Map&lt;java.lang.Thread, java.lang.StackTraceElement&gt; </td></tr>
<tr><td align="left" balign="left"> - isCCLOverridden(arg0 : java.lang.Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - auditSubclass(arg0 : java.lang.Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - dumpThreads(arg0 : java.lang.Thread[]) : java.lang.StackTraceElement[][] </td></tr>
<tr><td align="left" balign="left"> - getThreads() : java.lang.Thread[] </td></tr>
<tr><td align="left" balign="left"> + getId() : long </td></tr>
<tr><td align="left" balign="left"> + getState() : java.lang.Thread.State </td></tr>
<tr><td align="left" balign="left"> + setDefaultUncaughtExceptionHandler(arg0 : java.lang.Thread.UncaughtExceptionHandler) </td></tr>
<tr><td align="left" balign="left"> + getDefaultUncaughtExceptionHandler() : java.lang.Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> + getUncaughtExceptionHandler() : java.lang.Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> + setUncaughtExceptionHandler(arg0 : java.lang.Thread.UncaughtExceptionHandler) </td></tr>
<tr><td align="left" balign="left"> - dispatchUncaughtException(arg0 : java.lang.Throwable) </td></tr>
<tr><td align="left" balign="left"> ~ processQueue(arg0 : java.lang.ref.ReferenceQueue&lt;java.lang.Class&lt;?&gt;&gt;, arg1 : java.util.concurrent.ConcurrentMap&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> - setPriority0(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - stop0(arg0 : java.lang.Object) </td></tr>
<tr><td align="left" balign="left"> - suspend0() </td></tr>
<tr><td align="left" balign="left"> - resume0() </td></tr>
<tr><td align="left" balign="left"> - interrupt0() </td></tr>
<tr><td align="left" balign="left"> - setNativeName(arg0 : java.lang.String) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Thread.html", fontname="arial", fontcolor="black", fontsize=10.0];
}

