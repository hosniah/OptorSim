#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_7_2-3-gee82a7 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.edg.data.replication.optorsim.infrastructure.GridContainer
	c4860 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.GridContainer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./GridContainer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridContainer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _allGridSites : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _allJobs : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _totalProb : double </td></tr>
<tr><td align="left" balign="left"> - _instance : GridContainer </td></tr>
<tr><td align="left" balign="left"> - _randGen : Random </td></tr>
<tr><td align="left" balign="left"> - _bandwidth : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _totalNumberOfCEs : int </td></tr>
<tr><td align="left" balign="left"> - _predecessors : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _replications : long </td></tr>
<tr><td align="left" balign="left"> - _jobID : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : GridContainer </td></tr>
<tr><td align="left" balign="left"> + networkSegment(siteA : GridSite, siteB : GridSite) : Bandwidth </td></tr>
<tr><td align="left" balign="left"> + networkSegment(gsp : GridSitePair) : Bandwidth </td></tr>
<tr><td align="left" balign="left"> + addConnection(siteA : GridSite, siteB : GridSite) </td></tr>
<tr><td align="left" balign="left"> + dropConnection(siteA : GridSite, siteB : GridSite) </td></tr>
<tr><td align="left" balign="left"> + availableBandwidth(siteA : GridSite, siteB : GridSite) : float </td></tr>
<tr><td align="left" balign="left"> + currentBandwidth(siteA : GridSite, siteB : GridSite) : float </td></tr>
<tr><td align="left" balign="left"> - networkRoute(siteA : GridSite, siteB : GridSite) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - getRouters(siteA : GridSite, siteB : GridSite) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + printState() </td></tr>
<tr><td align="left" balign="left"> + maxBandwidth(siteA : GridSite, siteB : GridSite) : float </td></tr>
<tr><td align="left" balign="left"> + addNetworkRoutes(site : GridSite, pred : Map&lt;&gt;, neighbouringBW : Map&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + freeCEs() : ListIterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + siteNeighbours(site : GridSite) : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + allGridSites() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + shutDownAllCEs() </td></tr>
<tr><td align="left" balign="left"> + addSite(gs : GridSite) </td></tr>
<tr><td align="left" balign="left"> + startAllP2P() </td></tr>
<tr><td align="left" balign="left"> + shutDownAllP2P() </td></tr>
<tr><td align="left" balign="left"> + startAllCEs() </td></tr>
<tr><td align="left" balign="left"> + iterateGridSites() : Iterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + findGridSiteByID(id : int) : GridSite </td></tr>
<tr><td align="left" balign="left"> + pauseAllCEs() </td></tr>
<tr><td align="left" balign="left"> + unpauseAllCEs() </td></tr>
<tr><td align="left" balign="left"> + replicate(fromFile : DataFile, toSE : StorageElement) : DataFile </td></tr>
<tr><td align="left" balign="left"> + getStatistics() : Statistics </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + copy(fromFile : DataFile, toSite : GridSite, fileFraction : float) </td></tr>
<tr><td align="left" balign="left"> + countCEs() : int </td></tr>
<tr><td align="left" balign="left"> + numberOfSites() : int </td></tr>
<tr><td align="left" balign="left"> + registerJob(job : GridJob) </td></tr>
<tr><td align="left" balign="left"> + randomJob() : GridJob </td></tr>
		</table></td></tr>
		</table>>, URL="./GridContainer.html", fontname="arial", fontcolor="black", fontsize=10.0];
}

