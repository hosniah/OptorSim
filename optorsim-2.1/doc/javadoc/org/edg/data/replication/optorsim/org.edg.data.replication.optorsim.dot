#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_7_2-3-gee82a7 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.edg.data.replication.optorsim.WNShutdown
	c0 [label=<<table title="org.edg.data.replication.optorsim.WNShutdown" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WNShutdown.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WNShutdown </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _shutdownWN : int </td></tr>
<tr><td align="left" balign="left"> - _workerNodes : int </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + notifyWNShutdown() </td></tr>
<tr><td align="left" balign="left"> + waitShutdown() </td></tr>
		</table></td></tr>
		</table>>, URL="./WNShutdown.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.WorkerNode
	c1 [label=<<table title="org.edg.data.replication.optorsim.WorkerNode" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./WorkerNode.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> WorkerNode </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _imAlive : boolean </td></tr>
<tr><td align="left" balign="left"> - _wnID : int </td></tr>
<tr><td align="left" balign="left"> - _wnName : String </td></tr>
<tr><td align="left" balign="left"> - _totalJobTime : long </td></tr>
<tr><td align="left" balign="left"> - _workingTime : long </td></tr>
<tr><td align="left" balign="left"> - _site : GridSite </td></tr>
<tr><td align="left" balign="left"> - _ce : BatchComputingElement </td></tr>
<tr><td align="left" balign="left"> - _jobQueue : JobHandler </td></tr>
<tr><td align="left" balign="left"> - _active : boolean </td></tr>
<tr><td align="left" balign="left"> - _workerCapacity : float </td></tr>
<tr><td align="left" balign="left"> - _jobTimes : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _jobTimesWithQueue : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _jobFiles : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _startRunning : long </td></tr>
<tr><td align="left" balign="left"> - _launchTime : long </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getStatistics() : Statistics </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="./WorkerNode.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.UsersFactory
	c2 [label=<<table title="org.edg.data.replication.optorsim.UsersFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./UsersFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> UsersFactory </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SIMPLE_USERS : int </td></tr>
<tr><td align="left" balign="left"> - RANDOM_WAIT_USERS : int </td></tr>
<tr><td align="left" balign="left"> - CMSDC04_USERS : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getUsers() : Users </td></tr>
		</table></td></tr>
		</table>>, URL="./UsersFactory.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.Users
	c3 [label=<<table title="org.edg.data.replication.optorsim.Users" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Users.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Users </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + waitForNextJob() </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getNextJob() : GridJob </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + pauseUsers() </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + unPauseUsers() </font></td></tr>
		</table></td></tr>
		</table>>, URL="./Users.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.TimeThread
	c4 [label=<<table title="org.edg.data.replication.optorsim.TimeThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./TimeThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TimeThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - ONE_SECOND : int </td></tr>
<tr><td align="left" balign="left"> - paused : boolean </td></tr>
<tr><td align="left" balign="left"> - processingJobs : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + pause() </td></tr>
<tr><td align="left" balign="left"> + unPause() </td></tr>
<tr><td align="left" balign="left"> + falsifyProcessingJobs() </td></tr>
		</table></td></tr>
		</table>>, URL="./TimeThread.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.SkelResourceBroker
	c5 [label=<<table title="org.edg.data.replication.optorsim.SkelResourceBroker" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SkelResourceBroker.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> SkelResourceBroker </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _paused : boolean </td></tr>
<tr><td align="left" balign="left"> - _params : OptorSimParameters </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
<tr><td align="left" balign="left"> - _jobQueue : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _iAmAlive : boolean </td></tr>
<tr><td align="left" balign="left"> - FULL_STATS : int </td></tr>
<tr><td align="left" balign="left"> - SIMPLE_STATS : int </td></tr>
<tr><td align="left" balign="left"> - NO_STATS : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> # findCE(job : GridJob, optor : Optimisable) : ComputingElement </font></td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> - standBy() </td></tr>
<tr><td align="left" balign="left"> + shutDownRB() </td></tr>
<tr><td align="left" balign="left"> + submitJob(job : GridJob) </td></tr>
<tr><td align="left" balign="left"> - checkIfPaused() </td></tr>
<tr><td align="left" balign="left"> + pauseRB() </td></tr>
<tr><td align="left" balign="left"> + unPauseRB() </td></tr>
<tr><td align="left" balign="left"> - endSimulation() </td></tr>
		</table></td></tr>
		</table>>, URL="./SkelResourceBroker.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.SiteDataThread
	c6 [label=<<table title="org.edg.data.replication.optorsim.SiteDataThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SiteDataThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SiteDataThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - nodeChoice : String </td></tr>
<tr><td align="left" balign="left"> - ONE_SECOND : int </td></tr>
<tr><td align="left" balign="left"> - samplingDelay : int </td></tr>
<tr><td align="left" balign="left"> - _gc : GridContainer </td></tr>
<tr><td align="left" balign="left"> - site : GridSite </td></tr>
<tr><td align="left" balign="left"> - timeSecs : int </td></tr>
<tr><td align="left" balign="left"> - histarray : double[] </td></tr>
<tr><td align="left" balign="left"> - prevNoOfPairs : int </td></tr>
<tr><td align="left" balign="left"> - paused : boolean </td></tr>
<tr><td align="left" balign="left"> - printingAll : boolean </td></tr>
<tr><td align="left" balign="left"> - processingJobs : boolean </td></tr>
<tr><td align="left" balign="left"> - passData : boolean </td></tr>
<tr><td align="left" balign="left"> - prevCoUsage : float </td></tr>
<tr><td align="left" balign="left"> - prevPrevCoUsage : float </td></tr>
<tr><td align="left" balign="left"> - prevStUsage : float </td></tr>
<tr><td align="left" balign="left"> - prevPrevStUsage : float </td></tr>
<tr><td align="left" balign="left"> - seriesSMJTVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - seriesSJTHVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - seriesSCEUVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - seriesSSEUVTime : XYSeries </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getElement() : String </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + pause() </td></tr>
<tr><td align="left" balign="left"> + unPause() </td></tr>
<tr><td align="left" balign="left"> + setSampleRate(rate : float) </td></tr>
<tr><td align="left" balign="left"> + changePrintingAll() </td></tr>
<tr><td align="left" balign="left"> + currView(currViewingNode : String) </td></tr>
<tr><td align="left" balign="left"> + sendDatatoGUI() </td></tr>
<tr><td align="left" balign="left"> + falsifyProcessingJobs() </td></tr>
		</table></td></tr>
		</table>>, URL="./SiteDataThread.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.SimpleUsers
	c7 [label=<<table title="org.edg.data.replication.optorsim.SimpleUsers" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SimpleUsers.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SimpleUsers </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _numjobs : long </td></tr>
<tr><td align="left" balign="left"> - _paused : boolean </td></tr>
<tr><td align="left" balign="left"> # _params : OptorSimParameters </td></tr>
<tr><td align="left" balign="left"> # _time : GridTime </td></tr>
<tr><td align="left" balign="left"> - _rb : ResourceBroker </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + waitForNextJob() </td></tr>
<tr><td align="left" balign="left"> + getNextJob() : GridJob </td></tr>
<tr><td align="left" balign="left"> - checkIfPaused() </td></tr>
<tr><td align="left" balign="left"> + pauseUsers() </td></tr>
<tr><td align="left" balign="left"> + unPauseUsers() </td></tr>
		</table></td></tr>
		</table>>, URL="./SimpleUsers.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.SimpleComputingElement
	c8 [label=<<table title="org.edg.data.replication.optorsim.SimpleComputingElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SimpleComputingElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SimpleComputingElement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _LastCEId : int </td></tr>
<tr><td align="left" balign="left"> - _site : GridSite </td></tr>
<tr><td align="left" balign="left"> - _ceName : String </td></tr>
<tr><td align="left" balign="left"> - _imAlive : boolean </td></tr>
<tr><td align="left" balign="left"> - _paused : boolean </td></tr>
<tr><td align="left" balign="left"> - _CEId : int </td></tr>
<tr><td align="left" balign="left"> - _workingTime : long </td></tr>
<tr><td align="left" balign="left"> - _startRunning : long </td></tr>
<tr><td align="left" balign="left"> - _totalJobTime : long </td></tr>
<tr><td align="left" balign="left"> - _jobTimes : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _jobTimesWithQueue : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _jobFiles : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _jobsCompleted : int </td></tr>
<tr><td align="left" balign="left"> # _inputJobHandler : JobHandler </td></tr>
<tr><td align="left" balign="left"> # _runnable : boolean </td></tr>
<tr><td align="left" balign="left"> # _active : boolean </td></tr>
<tr><td align="left" balign="left"> # _remoteReads : long </td></tr>
<tr><td align="left" balign="left"> # _localReads : long </td></tr>
<tr><td align="left" balign="left"> # _workerNodes : int </td></tr>
<tr><td align="left" balign="left"> # _workerCapacity : float </td></tr>
<tr><td align="left" balign="left"> # _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + active() : boolean </td></tr>
<tr><td align="left" balign="left"> + imAlive() : boolean </td></tr>
<tr><td align="left" balign="left"> + getJobHandler() : JobHandler </td></tr>
<tr><td align="left" balign="left"> + getSite() : GridSite </td></tr>
<tr><td align="left" balign="left"> + getCeName() : String </td></tr>
<tr><td align="left" balign="left"> + getWorkerNodes() : int </td></tr>
<tr><td align="left" balign="left"> + iAm(id : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + getStatistics() : Statistics </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> # debugJobFiles() </td></tr>
<tr><td align="left" balign="left"> # simulateRemoteIO(remoteFile : DataFile, fraction : float) </td></tr>
<tr><td align="left" balign="left"> + pauseCE() </td></tr>
<tr><td align="left" balign="left"> + unpauseCE() </td></tr>
<tr><td align="left" balign="left"> + shutDownCE() </td></tr>
		</table></td></tr>
		</table>>, URL="./SimpleComputingElement.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.SequentialRandomEntryAccessGenerator
	c9 [label=<<table title="org.edg.data.replication.optorsim.SequentialRandomEntryAccessGenerator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SequentialRandomEntryAccessGenerator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SequentialRandomEntryAccessGenerator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _numFiles : int </td></tr>
<tr><td align="left" balign="left"> - _job : GridJob </td></tr>
<tr><td align="left" balign="left"> - _fileId : int </td></tr>
<tr><td align="left" balign="left"> - _fileCounter : int </td></tr>
<tr><td align="left" balign="left"> - _random : Random </td></tr>
<tr><td align="left" balign="left"> - _randomSeed : boolean </td></tr>
<tr><td align="left" balign="left"> - _startValue : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getNextFile() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./SequentialRandomEntryAccessGenerator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.SequentialAccessGenerator
	c10 [label=<<table title="org.edg.data.replication.optorsim.SequentialAccessGenerator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SequentialAccessGenerator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SequentialAccessGenerator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _numFiles : int </td></tr>
<tr><td align="left" balign="left"> - _job : GridJob </td></tr>
<tr><td align="left" balign="left"> - _fileId : int </td></tr>
<tr><td align="left" balign="left"> - _fileCounter : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getNextFile() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./SequentialAccessGenerator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.SEDataThread
	c11 [label=<<table title="org.edg.data.replication.optorsim.SEDataThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SEDataThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SEDataThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - nodeChoice : String </td></tr>
<tr><td align="left" balign="left"> - ONE_SECOND : int </td></tr>
<tr><td align="left" balign="left"> - samplingDelay : int </td></tr>
<tr><td align="left" balign="left"> - _gc : GridContainer </td></tr>
<tr><td align="left" balign="left"> - time : GridTime </td></tr>
<tr><td align="left" balign="left"> - site : GridSite </td></tr>
<tr><td align="left" balign="left"> - timeSecs : int </td></tr>
<tr><td align="left" balign="left"> - capacity : long </td></tr>
<tr><td align="left" balign="left"> - paused : boolean </td></tr>
<tr><td align="left" balign="left"> - printingAll : boolean </td></tr>
<tr><td align="left" balign="left"> - processingJobs : boolean </td></tr>
<tr><td align="left" balign="left"> - passData : boolean </td></tr>
<tr><td align="left" balign="left"> - prevUsage : float </td></tr>
<tr><td align="left" balign="left"> - prevPrevUsage : float </td></tr>
<tr><td align="left" balign="left"> - seriesSEUVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - pieDataset : DefaultPieDataset </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getElement() : String </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + pause() </td></tr>
<tr><td align="left" balign="left"> + unPause() </td></tr>
<tr><td align="left" balign="left"> + setSampleRate(rate : float) </td></tr>
<tr><td align="left" balign="left"> + changePrintingAll() </td></tr>
<tr><td align="left" balign="left"> + currView(currViewingNode : String) </td></tr>
<tr><td align="left" balign="left"> + sendDatatoGUI() </td></tr>
<tr><td align="left" balign="left"> + falsifyProcessingJobs() </td></tr>
		</table></td></tr>
		</table>>, URL="./SEDataThread.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.ResourceBrokerFactory
	c12 [label=<<table title="org.edg.data.replication.optorsim.ResourceBrokerFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ResourceBrokerFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ResourceBrokerFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _instance : ResourceBroker </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : ResourceBroker </td></tr>
<tr><td align="left" balign="left"> - instantiateRB() : ResourceBroker </td></tr>
		</table></td></tr>
		</table>>, URL="./ResourceBrokerFactory.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.ResourceBroker
	c13 [label=<<table title="org.edg.data.replication.optorsim.ResourceBroker" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ResourceBroker.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ResourceBroker </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + pauseRB() </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + unPauseRB() </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + submitJob(job : GridJob) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + shutDownRB() </font></td></tr>
		</table></td></tr>
		</table>>, URL="./ResourceBroker.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.RandomZipfAccessGenerator
	c14 [label=<<table title="org.edg.data.replication.optorsim.RandomZipfAccessGenerator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RandomZipfAccessGenerator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RandomZipfAccessGenerator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _numFiles : int </td></tr>
<tr><td align="left" balign="left"> - _job : GridJob </td></tr>
<tr><td align="left" balign="left"> - _fileCounter : int </td></tr>
<tr><td align="left" balign="left"> - _shape : double </td></tr>
<tr><td align="left" balign="left"> - _permutation : int[] </td></tr>
<tr><td align="left" balign="left"> - _startValue : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getNextFile() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./RandomZipfAccessGenerator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.RandomWalkUnitaryAccessGenerator
	c15 [label=<<table title="org.edg.data.replication.optorsim.RandomWalkUnitaryAccessGenerator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RandomWalkUnitaryAccessGenerator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RandomWalkUnitaryAccessGenerator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _numFiles : int </td></tr>
<tr><td align="left" balign="left"> - _job : GridJob </td></tr>
<tr><td align="left" balign="left"> - _fileCounter : int </td></tr>
<tr><td align="left" balign="left"> - _fileId : int </td></tr>
<tr><td align="left" balign="left"> - _random : Random </td></tr>
<tr><td align="left" balign="left"> - _randomSeed : boolean </td></tr>
<tr><td align="left" balign="left"> - _startValue : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getNextFile() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./RandomWalkUnitaryAccessGenerator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.RandomWalkGaussianAccessGenerator
	c16 [label=<<table title="org.edg.data.replication.optorsim.RandomWalkGaussianAccessGenerator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RandomWalkGaussianAccessGenerator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RandomWalkGaussianAccessGenerator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _numFiles : int </td></tr>
<tr><td align="left" balign="left"> - _job : GridJob </td></tr>
<tr><td align="left" balign="left"> - _fileCounter : int </td></tr>
<tr><td align="left" balign="left"> - _fileId : int </td></tr>
<tr><td align="left" balign="left"> - _random : Random </td></tr>
<tr><td align="left" balign="left"> - _randomSeed : boolean </td></tr>
<tr><td align="left" balign="left"> - _startValue : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getNextFile() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./RandomWalkGaussianAccessGenerator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.RandomWaitUsers
	c17 [label=<<table title="org.edg.data.replication.optorsim.RandomWaitUsers" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RandomWaitUsers.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RandomWaitUsers </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _rand : Random </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + waitForNextJob() </td></tr>
		</table></td></tr>
		</table>>, URL="./RandomWaitUsers.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.RandomCEResourceBroker
	c18 [label=<<table title="org.edg.data.replication.optorsim.RandomCEResourceBroker" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RandomCEResourceBroker.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RandomCEResourceBroker </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _randGen : Random </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + findCE(job : GridJob, optor : Optimisable) : ComputingElement </td></tr>
		</table></td></tr>
		</table>>, URL="./RandomCEResourceBroker.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.RandomAccessGenerator
	c19 [label=<<table title="org.edg.data.replication.optorsim.RandomAccessGenerator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RandomAccessGenerator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RandomAccessGenerator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _numFiles : int </td></tr>
<tr><td align="left" balign="left"> - _job : GridJob </td></tr>
<tr><td align="left" balign="left"> - _fileCounter : int </td></tr>
<tr><td align="left" balign="left"> - _random : Random </td></tr>
<tr><td align="left" balign="left"> - _randomSeed : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getNextFile() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./RandomAccessGenerator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.QueueLengthResourceBroker
	c20 [label=<<table title="org.edg.data.replication.optorsim.QueueLengthResourceBroker" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./QueueLengthResourceBroker.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> QueueLengthResourceBroker </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _random : Random </td></tr>
<tr><td align="left" balign="left"> - _randomSeed : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + findCE(job : GridJob, optor : Optimisable) : ComputingElement </td></tr>
		</table></td></tr>
		</table>>, URL="./QueueLengthResourceBroker.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.OptorSimOut
	c21 [label=<<table title="org.edg.data.replication.optorsim.OptorSimOut" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OptorSimOut.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> OptorSimOut </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + println(newText : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./OptorSimOut.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.OptorSimMain
	c22 [label=<<table title="org.edg.data.replication.optorsim.OptorSimMain" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OptorSimMain.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OptorSimMain </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _params : OptorSimParameters </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
<tr><td align="left" balign="left"> - init() </td></tr>
<tr><td align="left" balign="left"> - run() </td></tr>
<tr><td align="left" balign="left"> - initStorageElements() </td></tr>
<tr><td align="left" balign="left"> - usage() </td></tr>
		</table></td></tr>
		</table>>, URL="./OptorSimMain.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.OptorSimGUI
	c23 [label=<<table title="org.edg.data.replication.optorsim.OptorSimGUI" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OptorSimGUI.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OptorSimGUI </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - gc : GridContainer </td></tr>
<tr><td align="left" balign="left"> - params : OptorSimParameters </td></tr>
<tr><td align="left" balign="left"> - gt : GridTime </td></tr>
<tr><td align="left" balign="left"> - timer : TimeThread </td></tr>
<tr><td align="left" balign="left"> - rb : ResourceBroker </td></tr>
<tr><td align="left" balign="left"> - site : GridSite </td></tr>
<tr><td align="left" balign="left"> - g : Graphics </td></tr>
<tr><td align="left" balign="left"> - logic : JPanel </td></tr>
<tr><td align="left" balign="left"> - currTransfers : String[][] </td></tr>
<tr><td align="left" balign="left"> - tempArray : String[][] </td></tr>
<tr><td align="left" balign="left"> - currTransfersArrSize : int </td></tr>
<tr><td align="left" balign="left"> - logicPic : JLabel </td></tr>
<tr><td align="left" balign="left"> - simPaused : boolean </td></tr>
<tr><td align="left" balign="left"> - pane : Container </td></tr>
<tr><td align="left" balign="left"> - fMenuFileSelect : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - fMenuSaveGraphTable : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - fMenuProduceSummary : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - fMenuSaveParameters : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - fMenuExit : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - simMenuStart : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - simMenuStop : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - simMenuPause : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - simMenuRestart : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - statMenuSampleRate : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - statMenuGridHistNo : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - statMenuSiteHistNo : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - statMenuCompHistNo : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - dMenuColNode : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - dMenuEstNode : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - dMenuColTopol : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - dMenuEstTopol : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - dMenuColRHS : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - dMenuEstTerm : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - hMenuUserMan : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - leftSplitPane : JSplitPane </td></tr>
<tr><td align="left" balign="left"> - splitPane : JSplitPane </td></tr>
<tr><td align="left" balign="left"> - treeScroll : JScrollPane </td></tr>
<tr><td align="left" balign="left"> - rightScroll : JScrollPane </td></tr>
<tr><td align="left" balign="left"> - tableScroll : JScrollPane </td></tr>
<tr><td align="left" balign="left"> - terminalScroll : JScrollPane </td></tr>
<tr><td align="left" balign="left"> - ch : JScrollPane </td></tr>
<tr><td align="left" balign="left"> - tabbedPane : JTabbedPane </td></tr>
<tr><td align="left" balign="left"> - tree : JTree </td></tr>
<tr><td align="left" balign="left"> - tabTerm : JTextArea </td></tr>
<tr><td align="left" balign="left"> - simulConverse : JTextField </td></tr>
<tr><td align="left" balign="left"> - statsConverse : JTextField </td></tr>
<tr><td align="left" balign="left"> - timeConverse : JTextField </td></tr>
<tr><td align="left" balign="left"> - printableChart : JFreeChart </td></tr>
<tr><td align="left" balign="left"> - printableTitle : String </td></tr>
<tr><td align="left" balign="left"> - overallSummaryText : String </td></tr>
<tr><td align="left" balign="left"> - compTabSelected : int </td></tr>
<tr><td align="left" balign="left"> - storTabSelected : int </td></tr>
<tr><td align="left" balign="left"> - gridTabSelected : int </td></tr>
<tr><td align="left" balign="left"> - siteTabSelected : int </td></tr>
<tr><td align="left" balign="left"> - noOfSitesWithCompOrStor : int </td></tr>
<tr><td align="left" balign="left"> - totalNoOfCEs : int </td></tr>
<tr><td align="left" balign="left"> - totalNoOfSEs : int </td></tr>
<tr><td align="left" balign="left"> - numOfGridBars : int </td></tr>
<tr><td align="left" balign="left"> - numOfSiteBars : int </td></tr>
<tr><td align="left" balign="left"> - numOfCompBars : int </td></tr>
<tr><td align="left" balign="left"> - gridHistChange : boolean </td></tr>
<tr><td align="left" balign="left"> - siteHistChange : boolean </td></tr>
<tr><td align="left" balign="left"> - compHistChange : boolean </td></tr>
<tr><td align="left" balign="left"> - paramsTable : JTable </td></tr>
<tr><td align="left" balign="left"> - statsPanel : JPanel </td></tr>
<tr><td align="left" balign="left"> - printingAll : boolean </td></tr>
<tr><td align="left" balign="left"> - treeChoice : String </td></tr>
<tr><td align="left" balign="left"> - griddt : GridDataThread </td></tr>
<tr><td align="left" balign="left"> - sitedt : SiteDataThread[] </td></tr>
<tr><td align="left" balign="left"> - cedt : CEDataThread[] </td></tr>
<tr><td align="left" balign="left"> - sedt : SEDataThread[] </td></tr>
<tr><td align="left" balign="left"> - siteNumbers : int[] </td></tr>
<tr><td align="left" balign="left"> - coords : int[][] </td></tr>
<tr><td align="left" balign="left"> - gridListen : boolean </td></tr>
<tr><td align="left" balign="left"> - siteListen : boolean </td></tr>
<tr><td align="left" balign="left"> - compListen : boolean </td></tr>
<tr><td align="left" balign="left"> - storListen : boolean </td></tr>
<tr><td align="left" balign="left"> - simulationRunning : boolean </td></tr>
<tr><td align="left" balign="left"> - frequency : float </td></tr>
<tr><td align="left" balign="left"> - timeNow : String </td></tr>
<tr><td align="left" balign="left"> - popup : JPopupMenu </td></tr>
<tr><td align="left" balign="left"> - gridTabbedPane : JTabbedPane </td></tr>
<tr><td align="left" balign="left"> - siteTabbedPane : JTabbedPane </td></tr>
<tr><td align="left" balign="left"> - compTabbedPane : JTabbedPane </td></tr>
<tr><td align="left" balign="left"> - storTabbedPane : JTabbedPane </td></tr>
<tr><td align="left" balign="left"> - chartPanelg0 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelg1 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelg2 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelg3 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelg4 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelg5 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelg6 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanels0 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanels1 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanels2 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanels3 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanels4 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelc0 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelc1 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelc2 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelc3 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelc4 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelc5 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelst0 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelst1 : JPanel </td></tr>
<tr><td align="left" balign="left"> - chartPanelst2 : JPanel </td></tr>
<tr><td align="left" balign="left"> - gridTable : JTable </td></tr>
<tr><td align="left" balign="left"> - siteTable : JTable </td></tr>
<tr><td align="left" balign="left"> - compTable : JTable </td></tr>
<tr><td align="left" balign="left"> - storTable : JTable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - layoutMenus() </td></tr>
<tr><td align="left" balign="left"> - layoutPanels() </td></tr>
<tr><td align="left" balign="left"> - colourStatsPanels() </td></tr>
<tr><td align="left" balign="left"> - addPopupListeners() </td></tr>
<tr><td align="left" balign="left"> + filesTransferred(from : GridSite, to : GridSite, noOfFiles : int) </td></tr>
<tr><td align="left" balign="left"> + fileTransferStopped(from : GridSite, to : GridSite, noOfFiles : int) </td></tr>
<tr><td align="left" balign="left"> + createCategories(root : DefaultMutableTreeNode) </td></tr>
<tr><td align="left" balign="left"> + actionPerformed(e : ActionEvent) </td></tr>
<tr><td align="left" balign="left"> + valueChanged(e : TreeSelectionEvent) </td></tr>
<tr><td align="left" balign="left"> + siteSelected(site : String) </td></tr>
<tr><td align="left" balign="left"> + stateChanged(e : ChangeEvent) </td></tr>
<tr><td align="left" balign="left"> - establishGridPane() </td></tr>
<tr><td align="left" balign="left"> - establishSitePane() </td></tr>
<tr><td align="left" balign="left"> - establishCompPane() </td></tr>
<tr><td align="left" balign="left"> - establishStorPane() </td></tr>
<tr><td align="left" balign="left"> - establishGridSummaryTable() </td></tr>
<tr><td align="left" balign="left"> + addGridSummaryTableValues(grid : String) </td></tr>
<tr><td align="left" balign="left"> - establishSiteSummaryTable() </td></tr>
<tr><td align="left" balign="left"> + addSiteSummaryTableValues(sitEle : String) </td></tr>
<tr><td align="left" balign="left"> - establishCompSummaryTable() </td></tr>
<tr><td align="left" balign="left"> + addCompSummaryTableValues(comEle : String) </td></tr>
<tr><td align="left" balign="left"> - establishStorSummaryTable() </td></tr>
<tr><td align="left" balign="left"> + addStorSummaryTableValues(stoEle : String) </td></tr>
<tr><td align="left" balign="left"> + addGridMeanJobGraph(seriesGridMeanJobVTime : XYSeries, grid : String) </td></tr>
<tr><td align="left" balign="left"> + addGridJobHistGraph(histarray : double[], grid : String) </td></tr>
<tr><td align="left" balign="left"> + addGridNoRepGraph(seriesGridNoRepsVTime : XYSeries, grid : String) </td></tr>
<tr><td align="left" balign="left"> + addGridRemFilAccGraph(seriesGridRemFilAccVTime : XYSeries, grid : String) </td></tr>
<tr><td align="left" balign="left"> + addGridLocFilAccGraph(seriesGridLocFilAccVTime : XYSeries, grid : String) </td></tr>
<tr><td align="left" balign="left"> + addGridENUGraph(seriesGridENUVTime : XYSeries, grid : String) </td></tr>
<tr><td align="left" balign="left"> + addSiteJobHistGraph(histarray : double[], sit : String) </td></tr>
<tr><td align="left" balign="left"> + addSiteCEUseGraph(seriesSitCEUseVTime : XYSeries, sit : String) </td></tr>
<tr><td align="left" balign="left"> + addSiteSEUseGraph(seriesSitSEUseVTime : XYSeries, sit : String) </td></tr>
<tr><td align="left" balign="left"> + addCompMeanJobGraph(seriesMeanJobVTime : XYSeries, ce : String) </td></tr>
<tr><td align="left" balign="left"> + addCompJobHistGraph(histarray : double[], ce : String) </td></tr>
<tr><td align="left" balign="left"> + addCompCEUseGraph(seriesCEUseVTime : XYSeries, ce : String) </td></tr>
<tr><td align="left" balign="left"> + addCompRemFilAccGraph(seriesRemAccVTime : XYSeries, ce : String) </td></tr>
<tr><td align="left" balign="left"> + addCompLocFilAccGraph(seriesLocAccVTime : XYSeries, ce : String) </td></tr>
<tr><td align="left" balign="left"> + addStorUseGraph(seriesStUseVTime : XYSeries, se : String) </td></tr>
<tr><td align="left" balign="left"> + addStorPieChart(pieDataset : DefaultPieDataset, sto : String) </td></tr>
<tr><td align="left" balign="left"> + addSiteMeanJobGraph(seriesSitMeanJobVTime : XYSeries, sit : String) </td></tr>
<tr><td align="left" balign="left"> + addLine(newText : String) </td></tr>
<tr><td align="left" balign="left"> + allJobsCompleted() </td></tr>
<tr><td align="left" balign="left"> + mouseClicked(e : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + mouseEntered(e : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + mouseExited(e : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + mousePressed(e : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + mouseReleased(e : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + showPopup(e : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + mouseDragged(e : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + mouseMoved(e : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + setTime(date : Date) </td></tr>
		</table></td></tr>
		</table>>, URL="./OptorSimGUI.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.JobHandler
	c24 [label=<<table title="org.edg.data.replication.optorsim.JobHandler" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./JobHandler.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JobHandler </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _queueLimit : int </td></tr>
<tr><td align="left" balign="left"> - _jobCount : int </td></tr>
<tr><td align="left" balign="left"> - _jobQueue : LinkedList&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _runningJobQueue : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _endOfJobs : boolean </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + get() : GridJob </td></tr>
<tr><td align="left" balign="left"> + put(gridJob : GridJob) : boolean </td></tr>
<tr><td align="left" balign="left"> + interruptJobHandler() </td></tr>
<tr><td align="left" balign="left"> + getQueueSize() : int </td></tr>
<tr><td align="left" balign="left"> + isFull() : boolean </td></tr>
<tr><td align="left" balign="left"> + getQueueAccessCost(optor : Optimisable, ce : ComputingElement) : double </td></tr>
<tr><td align="left" balign="left"> + jobCount() : int </td></tr>
<tr><td align="left" balign="left"> + putFirst(gridJob : GridJob) : boolean </td></tr>
<tr><td align="left" balign="left"> + isEndOfJobs() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./JobHandler.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.GridDataThread
	c25 [label=<<table title="org.edg.data.replication.optorsim.GridDataThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GridDataThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridDataThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - nodeChoice : String </td></tr>
<tr><td align="left" balign="left"> - ONE_SECOND : int </td></tr>
<tr><td align="left" balign="left"> - samplingDelay : int </td></tr>
<tr><td align="left" balign="left"> - _gc : GridContainer </td></tr>
<tr><td align="left" balign="left"> - params : OptorSimParameters </td></tr>
<tr><td align="left" balign="left"> - site : GridSite </td></tr>
<tr><td align="left" balign="left"> - timeSecs : int </td></tr>
<tr><td align="left" balign="left"> - histarray : double[] </td></tr>
<tr><td align="left" balign="left"> - i : int </td></tr>
<tr><td align="left" balign="left"> - prevNoOfPairs : int </td></tr>
<tr><td align="left" balign="left"> - paused : boolean </td></tr>
<tr><td align="left" balign="left"> - printingAll : boolean </td></tr>
<tr><td align="left" balign="left"> - processingJobs : boolean </td></tr>
<tr><td align="left" balign="left"> - noOfJobs : int </td></tr>
<tr><td align="left" balign="left"> - passData : boolean </td></tr>
<tr><td align="left" balign="left"> - seriesGRFAVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - seriesGLFAVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - seriesGMJTVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - seriesGJTHVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - seriesGNRVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - seriesGENUVTime : XYSeries </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + pause() </td></tr>
<tr><td align="left" balign="left"> + unPause() </td></tr>
<tr><td align="left" balign="left"> + setSampleRate(rate : float) </td></tr>
<tr><td align="left" balign="left"> + changePrintingAll() </td></tr>
<tr><td align="left" balign="left"> + currView(currViewingNode : String) </td></tr>
<tr><td align="left" balign="left"> + sendDatatoGUI() </td></tr>
<tr><td align="left" balign="left"> + setNoOfJobs(jobNumber : int) </td></tr>
<tr><td align="left" balign="left"> + falsifyProcessingJobs() </td></tr>
		</table></td></tr>
		</table>>, URL="./GridDataThread.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.GridConfFileReader
	c26 [label=<<table title="org.edg.data.replication.optorsim.GridConfFileReader" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GridConfFileReader.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridConfFileReader </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _gridSites : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _ceFlag : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _seFlag : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _ceCapacity : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _networkMetricStatic : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _routeHash : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _filename : String </td></tr>
<tr><td align="left" balign="left"> - _numSites : int </td></tr>
<tr><td align="left" balign="left"> - _gridConfFileReaderInstance : GridConfFileReader </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : GridConfFileReader </td></tr>
<tr><td align="left" balign="left"> + createGridSites() </td></tr>
<tr><td align="left" balign="left"> - read() </td></tr>
<tr><td align="left" balign="left"> - associateNeighbours() </td></tr>
<tr><td align="left" balign="left"> - findRoutes() </td></tr>
<tr><td align="left" balign="left"> - dijkstraSearch(sourceSite : GridSite, neighbours : Map&lt;&gt;) : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - relax(pSite : GridSite, nSite : GridSite, sourceSite : GridSite, bw : float, estimate : Map&lt;&gt;, predecessor : Map&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> - getMinimumHopRoute(pSite : GridSite, nSite : GridSite, sourceSite : GridSite, predecessor : Map&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> - extractHighestBandwidth(sites : Set&lt;&gt;, costs : Map&lt;&gt;) : GridSite </td></tr>
<tr><td align="left" balign="left"> + buildNeighbours() : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - getSiteByID(id : int) : GridSite </td></tr>
		</table></td></tr>
		</table>>, URL="./GridConfFileReader.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.ComputingElementFactory
	c27 [label=<<table title="org.edg.data.replication.optorsim.ComputingElementFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ComputingElementFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ComputingElementFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _instance : ComputingElementFactory </td></tr>
<tr><td align="left" balign="left"> - SIMPLE_COMPUTING_ELEMENT : int </td></tr>
<tr><td align="left" balign="left"> - BATCH_COMPUTING_ELEMENT : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : ComputingElementFactory </td></tr>
<tr><td align="left" balign="left"> + getComputingElement(site : GridSite, wn : int, capacity : long) : ComputingElement </td></tr>
		</table></td></tr>
		</table>>, URL="./ComputingElementFactory.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.CombinedCostResourceBroker
	c28 [label=<<table title="org.edg.data.replication.optorsim.CombinedCostResourceBroker" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CombinedCostResourceBroker.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CombinedCostResourceBroker </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _random : Random </td></tr>
<tr><td align="left" balign="left"> - _randomSeed : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + findCE(job : GridJob, optor : Optimisable) : ComputingElement </td></tr>
		</table></td></tr>
		</table>>, URL="./CombinedCostResourceBroker.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.CMSDC04Users
	c29 [label=<<table title="org.edg.data.replication.optorsim.CMSDC04Users" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CMSDC04Users.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CMSDC04Users </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - MAX_JOBS_PER_HOUR : int </td></tr>
<tr><td align="left" balign="left"> - MS_IN_HOUR : int </td></tr>
<tr><td align="left" balign="left"> - PEAK_TIME : double </td></tr>
<tr><td align="left" balign="left"> - SIGMA : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + waitForNextJob() </td></tr>
<tr><td align="left" balign="left"> - jobsPerHour() : int </td></tr>
		</table></td></tr>
		</table>>, URL="./CMSDC04Users.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.CEDataThread
	c30 [label=<<table title="org.edg.data.replication.optorsim.CEDataThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CEDataThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CEDataThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - nodeChoice : String </td></tr>
<tr><td align="left" balign="left"> - ONE_SECOND : int </td></tr>
<tr><td align="left" balign="left"> - samplingDelay : int </td></tr>
<tr><td align="left" balign="left"> - gc : GridContainer </td></tr>
<tr><td align="left" balign="left"> - site : GridSite </td></tr>
<tr><td align="left" balign="left"> - timeSecs : int </td></tr>
<tr><td align="left" balign="left"> - st : Statistics </td></tr>
<tr><td align="left" balign="left"> - histarray : double[] </td></tr>
<tr><td align="left" balign="left"> - prevNoOfPairs : int </td></tr>
<tr><td align="left" balign="left"> - paused : boolean </td></tr>
<tr><td align="left" balign="left"> - printingAll : boolean </td></tr>
<tr><td align="left" balign="left"> - processingJobs : boolean </td></tr>
<tr><td align="left" balign="left"> - passData : boolean </td></tr>
<tr><td align="left" balign="left"> - seriesRFAVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - seriesLFAVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - seriesMJTVTime : XYSeries </td></tr>
<tr><td align="left" balign="left"> - seriesCEUVTime : XYSeries </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getElement() : String </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + pause() </td></tr>
<tr><td align="left" balign="left"> + unPause() </td></tr>
<tr><td align="left" balign="left"> + setSampleRate(rate : float) </td></tr>
<tr><td align="left" balign="left"> + changePrintingAll() </td></tr>
<tr><td align="left" balign="left"> + currView(currViewingNode : String) </td></tr>
<tr><td align="left" balign="left"> + sendDatatoGUI() </td></tr>
<tr><td align="left" balign="left"> + falsifyProcessingJobs() </td></tr>
		</table></td></tr>
		</table>>, URL="./CEDataThread.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.BatchComputingElement
	c31 [label=<<table title="org.edg.data.replication.optorsim.BatchComputingElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BatchComputingElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BatchComputingElement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _wnThreads : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _wnShutdown : WNShutdown </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getGridTime() : GridTime </td></tr>
<tr><td align="left" balign="left"> + getWorkerNodes() : int </td></tr>
<tr><td align="left" balign="left"> + notifyWNShutdown(wnName : String) </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + getStatistics() : Statistics </td></tr>
<tr><td align="left" balign="left"> # incLocalReads() </td></tr>
<tr><td align="left" balign="left"> # incRemoteReads() </td></tr>
		</table></td></tr>
		</table>>, URL="./BatchComputingElement.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.AccessPatternGeneratorFactory
	c32 [label=<<table title="org.edg.data.replication.optorsim.AccessPatternGeneratorFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AccessPatternGeneratorFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> AccessPatternGeneratorFactory </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SEQUENTIAL_ACCESS_GENERATOR : int </td></tr>
<tr><td align="left" balign="left"> - RANDOM_ACCESS_GENERATOR : int </td></tr>
<tr><td align="left" balign="left"> - RANDOM_WALK_UNITARY_ACCESS_GENERATOR : int </td></tr>
<tr><td align="left" balign="left"> - RANDOM_WALK_GAUSSIAN_ACCESS_GENERATOR : int </td></tr>
<tr><td align="left" balign="left"> - RANDOM_ZIPF_ACCESS_GENERATOR : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getAPGenerator(gridJob : GridJob) : AccessPatternGenerator </td></tr>
<tr><td align="left" balign="left"> + getAccessPatternName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./AccessPatternGeneratorFactory.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.AccessPatternGenerator
	c33 [label=<<table title="org.edg.data.replication.optorsim.AccessPatternGenerator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AccessPatternGenerator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> AccessPatternGenerator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getNextFile() : String </font></td></tr>
		</table></td></tr>
		</table>>, URL="./AccessPatternGenerator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.AccessCostResourceBroker
	c34 [label=<<table title="org.edg.data.replication.optorsim.AccessCostResourceBroker" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AccessCostResourceBroker.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AccessCostResourceBroker </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _random : Random </td></tr>
<tr><td align="left" balign="left"> - _randomSeed : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + findCE(job : GridJob, optor : Optimisable) : ComputingElement </td></tr>
		</table></td></tr>
		</table>>, URL="./AccessCostResourceBroker.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.edg.data.replication.optorsim.SkelResourceBroker implements org.edg.data.replication.optorsim.ResourceBroker
	c13:p -> c5:p [dir=back,arrowtail=empty,style=dashed];
	//org.edg.data.replication.optorsim.SimpleUsers implements org.edg.data.replication.optorsim.Users
	c3:p -> c7:p [dir=back,arrowtail=empty,style=dashed];
	//org.edg.data.replication.optorsim.SequentialRandomEntryAccessGenerator implements org.edg.data.replication.optorsim.AccessPatternGenerator
	c33:p -> c9:p [dir=back,arrowtail=empty,style=dashed];
	//org.edg.data.replication.optorsim.SequentialAccessGenerator implements org.edg.data.replication.optorsim.AccessPatternGenerator
	c33:p -> c10:p [dir=back,arrowtail=empty,style=dashed];
	//org.edg.data.replication.optorsim.RandomZipfAccessGenerator implements org.edg.data.replication.optorsim.AccessPatternGenerator
	c33:p -> c14:p [dir=back,arrowtail=empty,style=dashed];
	//org.edg.data.replication.optorsim.RandomWalkUnitaryAccessGenerator implements org.edg.data.replication.optorsim.AccessPatternGenerator
	c33:p -> c15:p [dir=back,arrowtail=empty,style=dashed];
	//org.edg.data.replication.optorsim.RandomWalkGaussianAccessGenerator implements org.edg.data.replication.optorsim.AccessPatternGenerator
	c33:p -> c16:p [dir=back,arrowtail=empty,style=dashed];
	//org.edg.data.replication.optorsim.RandomWaitUsers extends org.edg.data.replication.optorsim.SimpleUsers
	c7:p -> c17:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.RandomCEResourceBroker extends org.edg.data.replication.optorsim.SkelResourceBroker
	c5:p -> c18:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.RandomAccessGenerator implements org.edg.data.replication.optorsim.AccessPatternGenerator
	c33:p -> c19:p [dir=back,arrowtail=empty,style=dashed];
	//org.edg.data.replication.optorsim.QueueLengthResourceBroker extends org.edg.data.replication.optorsim.SkelResourceBroker
	c5:p -> c20:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.CombinedCostResourceBroker extends org.edg.data.replication.optorsim.SkelResourceBroker
	c5:p -> c28:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.CMSDC04Users extends org.edg.data.replication.optorsim.SimpleUsers
	c7:p -> c29:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.BatchComputingElement extends org.edg.data.replication.optorsim.SimpleComputingElement
	c8:p -> c31:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.AccessCostResourceBroker extends org.edg.data.replication.optorsim.SkelResourceBroker
	c5:p -> c34:p [dir=back,arrowtail=empty];
}

