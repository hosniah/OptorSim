#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_7_2-3-gee82a7 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.edg.data.replication.optorsim.infrastructure.NodeCounter
	c260 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.NodeCounter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./NodeCounter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NodeCounter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - value : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + add() </td></tr>
<tr><td align="left" balign="left"> + getValue() : int </td></tr>
		</table></td></tr>
		</table>>, URL="./NodeCounter.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.StorageElement
	c261 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.StorageElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./StorageElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> StorageElement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + isFull() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getGridSite() : GridSite </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + toString() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getAvailableSpace() : long </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getCapacity() : long </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + isTherePotentialAvailableSpace(newFile : DataFile) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getStatistics() : Statistics </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getAllFiles() : Hashtable&lt;&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + numberOfStoredFiles() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + reserveSpace(filesize : int) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + listFiles() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addFile(file : DataFile) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addPreReservedFile(file : DataFile) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + removeFile(file : DataFile) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + hasFile(name : String) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + requestFile(filename : String) : DataFile </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + accessFile(file : DataFile) </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + filesToDelete(file : DataFile) : List&lt;&gt; </font></td></tr>
		</table></td></tr>
		</table>>, URL="./StorageElement.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.Statistics
	c262 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.Statistics" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Statistics.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Statistics </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _date : Date </td></tr>
<tr><td align="left" balign="left"> - _values : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _generator : Object </td></tr>
<tr><td align="left" balign="left"> - _children : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + addChild(child : Statistics) </td></tr>
<tr><td align="left" balign="left"> + getStatistic(attribute : String) : Object </td></tr>
<tr><td align="left" balign="left"> + getFloatStatistic(attribue : String) : float </td></tr>
<tr><td align="left" balign="left"> + getDate() : Date </td></tr>
<tr><td align="left" balign="left"> + getGenerator() : Object </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + allStatistics() : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + allStatistics(classType : Class&lt;&gt;) : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - recursiveAllStats(stats : Set&lt;&gt;, type : Class&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + printStatistics() </td></tr>
<tr><td align="left" balign="left"> + recursivePrintStatistics() </td></tr>
<tr><td align="left" balign="left"> - printStatistics(topLevel : boolean, pad : String, hasChildren : boolean, hasNext : boolean) </td></tr>
<tr><td align="left" balign="left"> - recursivePrintStatistics(topLevel : boolean, pad : String, hasNext : boolean) </td></tr>
		</table></td></tr>
		</table>>, URL="./Statistics.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.SimpleBandwidth
	c263 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.SimpleBandwidth" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SimpleBandwidth.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SimpleBandwidth </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _maxBandwidth : float </td></tr>
<tr><td align="left" balign="left"> - _nConnections : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + addConnection() </td></tr>
<tr><td align="left" balign="left"> + dropConnection() </td></tr>
<tr><td align="left" balign="left"> + availableBandwidth() : float </td></tr>
<tr><td align="left" balign="left"> + currentBandwidth() : float </td></tr>
<tr><td align="left" balign="left"> + maxBandwidth() : float </td></tr>
<tr><td align="left" balign="left"> + connectionCount() : int </td></tr>
		</table></td></tr>
		</table>>, URL="./SimpleBandwidth.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.OptorSimParameters
	c264 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.OptorSimParameters" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./OptorSimParameters.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OptorSimParameters </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _table : Properties </td></tr>
<tr><td align="left" balign="left"> - _optorSimParametersInstance : OptorSimParameters </td></tr>
<tr><td align="left" balign="left"> - _parametersFilename : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : OptorSimParameters </td></tr>
<tr><td align="left" balign="left"> + setFilename(filename : String) </td></tr>
<tr><td align="left" balign="left"> + getGridConfigfile() : String </td></tr>
<tr><td align="left" balign="left"> + getJobConfigFile() : String </td></tr>
<tr><td align="left" balign="left"> + getBandwidthConfigFile() : String </td></tr>
<tr><td align="left" balign="left"> + getNoOfJobs() : int </td></tr>
<tr><td align="left" balign="left"> + getScheduler() : int </td></tr>
<tr><td align="left" balign="left"> + getUsers() : int </td></tr>
<tr><td align="left" balign="left"> + getOptimiser() : int </td></tr>
<tr><td align="left" balign="left"> + getDt() : long </td></tr>
<tr><td align="left" balign="left"> + getAccessPatternGenerator() : int </td></tr>
<tr><td align="left" balign="left"> + getShape() : double </td></tr>
<tr><td align="left" balign="left"> + getComputingElement() : int </td></tr>
<tr><td align="left" balign="left"> + getFileDistribution() : String[] </td></tr>
<tr><td align="left" balign="left"> + fillAllSites() : boolean </td></tr>
<tr><td align="left" balign="left"> + getJobDelay() : int </td></tr>
<tr><td align="left" balign="left"> + useRandomSeed() : boolean </td></tr>
<tr><td align="left" balign="left"> + getMaxQueueSize() : int </td></tr>
<tr><td align="left" balign="left"> + getProcessTime() : int </td></tr>
<tr><td align="left" balign="left"> + auctionOn() : boolean </td></tr>
<tr><td align="left" balign="left"> + getInitialHopCount() : int </td></tr>
<tr><td align="left" balign="left"> + getInitialTimeout() : long </td></tr>
<tr><td align="left" balign="left"> + getTimeoutReductionFactor() : double </td></tr>
<tr><td align="left" balign="left"> + useAuctionDebugger() : boolean </td></tr>
<tr><td align="left" balign="left"> + useBackgroundBandwidth() : boolean </td></tr>
<tr><td align="left" balign="left"> + getDefaultBackground() : String </td></tr>
<tr><td align="left" balign="left"> + getDataDirectory() : String </td></tr>
<tr><td align="left" balign="left"> + startTimeOfDay() : float </td></tr>
<tr><td align="left" balign="left"> + useGui() : boolean </td></tr>
<tr><td align="left" balign="left"> + outputStatistics() : int </td></tr>
<tr><td align="left" balign="left"> + advanceTime() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./OptorSimParameters.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.MathSupport
	c265 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.MathSupport" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MathSupport.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> MathSupport </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _random : Random </td></tr>
<tr><td align="left" balign="left"> - _randomSeed : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + makePermutation(numFilesInSet : int) : int[] </td></tr>
<tr><td align="left" balign="left"> + zipfDistribution(permutation : int[], shape : double) : int </td></tr>
<tr><td align="left" balign="left"> + factorial(n : long) : double </td></tr>
<tr><td align="left" balign="left"> - log_gamma(xx : float) : double </td></tr>
<tr><td align="left" balign="left"> + binomialCoefficient(n : long, k : long) : double </td></tr>
<tr><td align="left" balign="left"> + logBinomialCoefficient(n : long, k : float) : double </td></tr>
<tr><td align="left" balign="left"> + symBinDistribution(maxWidth : long, center : float, value : long) : double </td></tr>
<tr><td align="left" balign="left"> + addGaussianJitter(mu : double, sigma : double) : double </td></tr>
<tr><td align="left" balign="left"> + addLandauJitter(mu : double, sigma : double) : double </td></tr>
<tr><td align="left" balign="left"> + nextReverseLandau() : double </td></tr>
		</table></td></tr>
		</table>>, URL="./MathSupport.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.JobConfFileReader
	c266 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.JobConfFileReader" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./JobConfFileReader.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JobConfFileReader </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _jobCollection : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _fileCollection : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _params : OptorSimParameters </td></tr>
<tr><td align="left" balign="left"> - _jobConfFileReader : JobConfFileReader </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : JobConfFileReader </td></tr>
<tr><td align="left" balign="left"> - readFile(filename : String) </td></tr>
<tr><td align="left" balign="left"> + assignFilesToSites() : Iterator&lt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./JobConfFileReader.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.GridSitePair
	c267 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.GridSitePair" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GridSitePair.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridSitePair </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _hashCode : int </td></tr>
<tr><td align="left" balign="left"> - _siteA : GridSite </td></tr>
<tr><td align="left" balign="left"> - _siteB : GridSite </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./GridSitePair.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.GridSite
	c268 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.GridSite" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GridSite.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridSite </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _siteID : int </td></tr>
<tr><td align="left" balign="left"> - _computingElementCollection : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _computingThreads : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _storageElementCollection : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _neighbourSites : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _acceptableJobs : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _params : OptorSimParameters </td></tr>
<tr><td align="left" balign="left"> - _lastSiteID : int </td></tr>
<tr><td align="left" balign="left"> - _routedFiles : int </td></tr>
<tr><td align="left" balign="left"> - _accessedFiles : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + associateNeighbours() </td></tr>
<tr><td align="left" balign="left"> + exposeIndex() : int </td></tr>
<tr><td align="left" balign="left"> + acceptJob(job : GridJob) </td></tr>
<tr><td align="left" balign="left"> # allCEs() : ListIterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # availableCEs() : ListIterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + acceptsJob(job : GridJob) : boolean </td></tr>
<tr><td align="left" balign="left"> + getJobList() : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + printState() </td></tr>
<tr><td align="left" balign="left"> + hasSEs() : boolean </td></tr>
<tr><td align="left" balign="left"> + startAllCEs() </td></tr>
<tr><td align="left" balign="left"> + waitForAllCEsToFinish() </td></tr>
<tr><td align="left" balign="left"> + shutDownAllCEs() </td></tr>
<tr><td align="left" balign="left"> + pauseAllCEs() </td></tr>
<tr><td align="left" balign="left"> + unpauseAllCEs() </td></tr>
<tr><td align="left" balign="left"> + getSEEnum() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + iAm(index : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + addFileToRandomSE(file : DataFile) : DataFile </td></tr>
<tr><td align="left" balign="left"> + hasCE(index : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + hasCE() : boolean </td></tr>
<tr><td align="left" balign="left"> + countCEs() : int </td></tr>
<tr><td align="left" balign="left"> + getCE() : ComputingElement </td></tr>
<tr><td align="left" balign="left"> + getSE() : StorageElement </td></tr>
<tr><td align="left" balign="left"> + getCloseSE() : StorageElement </td></tr>
<tr><td align="left" balign="left"> + fillSEsWithFiles(files : Collection&lt;&gt;) : Iterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + countSEs() : int </td></tr>
<tr><td align="left" balign="left"> # addRoutedFile() </td></tr>
<tr><td align="left" balign="left"> # addAccessedFile() </td></tr>
<tr><td align="left" balign="left"> + registerSE(se : StorageElement) : int </td></tr>
<tr><td align="left" balign="left"> + registerCE(ce : ComputingElement) : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + neighbouringSites() : Iterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getStatistics() : Statistics </td></tr>
		</table></td></tr>
		</table>>, URL="./GridSite.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.GridJob
	c269 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.GridJob" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GridJob.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridJob </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _name : String </td></tr>
<tr><td align="left" balign="left"> - _jobScheduled : long </td></tr>
<tr><td align="left" balign="left"> - _jobStarted : long </td></tr>
<tr><td align="left" balign="left"> - _probability : double </td></tr>
<tr><td align="left" balign="left"> - _id : int </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
<tr><td align="left" balign="left"> - _latency : double </td></tr>
<tr><td align="left" balign="left"> - _linearFactor : double </td></tr>
<tr><td align="left" balign="left"> - _fileFraction : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + assignID(id : int) </td></tr>
<tr><td align="left" balign="left"> + assignProbability(p : double) </td></tr>
<tr><td align="left" balign="left"> + setLatency(latency : double) </td></tr>
<tr><td align="left" balign="left"> + setLinearFactor(linearFactor : double) </td></tr>
<tr><td align="left" balign="left"> + setFileFraction(fileFraction : float) </td></tr>
<tr><td align="left" balign="left"> + getLatency() : double </td></tr>
<tr><td align="left" balign="left"> + getLinearFactor() : double </td></tr>
<tr><td align="left" balign="left"> + getFileFraction() : float </td></tr>
<tr><td align="left" balign="left"> + probability() : double </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + name() : String </td></tr>
<tr><td align="left" balign="left"> + equals(a : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + cloneJob() : GridJob </td></tr>
<tr><td align="left" balign="left"> + scheduled() </td></tr>
<tr><td align="left" balign="left"> + started() </td></tr>
<tr><td align="left" balign="left"> + timeScheduled() : long </td></tr>
<tr><td align="left" balign="left"> + timeStarted() : long </td></tr>
<tr><td align="left" balign="left"> + trimJob() </td></tr>
		</table></td></tr>
		</table>>, URL="./GridJob.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.GridContainer
	c270 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.GridContainer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./GridContainer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GridContainer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _allGridSites : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _allJobs : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _totalProb : double </td></tr>
<tr><td align="left" balign="left"> - _instance : GridContainer </td></tr>
<tr><td align="left" balign="left"> - _randGen : Random </td></tr>
<tr><td align="left" balign="left"> - _bandwidth : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _totalNumberOfCEs : int </td></tr>
<tr><td align="left" balign="left"> - _predecessors : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _replications : long </td></tr>
<tr><td align="left" balign="left"> - _jobID : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : GridContainer </td></tr>
<tr><td align="left" balign="left"> + networkSegment(siteA : GridSite, siteB : GridSite) : Bandwidth </td></tr>
<tr><td align="left" balign="left"> + networkSegment(gsp : GridSitePair) : Bandwidth </td></tr>
<tr><td align="left" balign="left"> + addConnection(siteA : GridSite, siteB : GridSite) </td></tr>
<tr><td align="left" balign="left"> + dropConnection(siteA : GridSite, siteB : GridSite) </td></tr>
<tr><td align="left" balign="left"> + availableBandwidth(siteA : GridSite, siteB : GridSite) : float </td></tr>
<tr><td align="left" balign="left"> + currentBandwidth(siteA : GridSite, siteB : GridSite) : float </td></tr>
<tr><td align="left" balign="left"> - networkRoute(siteA : GridSite, siteB : GridSite) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - getRouters(siteA : GridSite, siteB : GridSite) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + printState() </td></tr>
<tr><td align="left" balign="left"> + maxBandwidth(siteA : GridSite, siteB : GridSite) : float </td></tr>
<tr><td align="left" balign="left"> + addNetworkRoutes(site : GridSite, pred : Map&lt;&gt;, neighbouringBW : Map&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + freeCEs() : ListIterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + siteNeighbours(site : GridSite) : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + allGridSites() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + shutDownAllCEs() </td></tr>
<tr><td align="left" balign="left"> + addSite(gs : GridSite) </td></tr>
<tr><td align="left" balign="left"> + startAllP2P() </td></tr>
<tr><td align="left" balign="left"> + shutDownAllP2P() </td></tr>
<tr><td align="left" balign="left"> + startAllCEs() </td></tr>
<tr><td align="left" balign="left"> + iterateGridSites() : Iterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + findGridSiteByID(id : int) : GridSite </td></tr>
<tr><td align="left" balign="left"> + pauseAllCEs() </td></tr>
<tr><td align="left" balign="left"> + unpauseAllCEs() </td></tr>
<tr><td align="left" balign="left"> + replicate(fromFile : DataFile, toSE : StorageElement) : DataFile </td></tr>
<tr><td align="left" balign="left"> + getStatistics() : Statistics </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + copy(fromFile : DataFile, toSite : GridSite, fileFraction : float) </td></tr>
<tr><td align="left" balign="left"> + countCEs() : int </td></tr>
<tr><td align="left" balign="left"> + numberOfSites() : int </td></tr>
<tr><td align="left" balign="left"> + registerJob(job : GridJob) </td></tr>
<tr><td align="left" balign="left"> + randomJob() : GridJob </td></tr>
		</table></td></tr>
		</table>>, URL="./GridContainer.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.FileTransferFactory
	c271 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.FileTransferFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FileTransferFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> FileTransferFactory </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _spareFileTransfers : Stack&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _runningFileTransfers : Vector&lt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # getFileTransfer() : FileTransfer </td></tr>
<tr><td align="left" balign="left"> # notifyAllFileTransferStarted(ft : FileTransfer) </td></tr>
<tr><td align="left" balign="left"> # notifyAllFileTransferEnded(ft : FileTransfer) </td></tr>
<tr><td align="left" balign="left"> - notifyAllFileTransfers(ft : FileTransfer) </td></tr>
		</table></td></tr>
		</table>>, URL="./FileTransferFactory.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.FileTransfer
	c272 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.FileTransfer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./FileTransfer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FileTransfer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ BITS_IN_BYTE : int </td></tr>
<tr><td align="left" balign="left"> ~ MILLISECONDS_IN_SECOND : int </td></tr>
<tr><td align="left" balign="left"> ~ HALF_AN_HOUR : int </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + transferFile(site1 : GridSite, site2 : GridSite, fileSize : int) </td></tr>
<tr><td align="left" balign="left"> + notifyFT() </td></tr>
		</table></td></tr>
		</table>>, URL="./FileTransfer.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.DataFile
	c273 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.DataFile" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DataFile.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DataFile </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _lfn : String </td></tr>
<tr><td align="left" balign="left"> - _size : int </td></tr>
<tr><td align="left" balign="left"> - _fileIndex : int </td></tr>
<tr><td align="left" balign="left"> - _master : boolean </td></tr>
<tr><td align="left" balign="left"> - _timestamp : Date </td></tr>
<tr><td align="left" balign="left"> - _pin : int </td></tr>
<tr><td align="left" balign="left"> - _accessList : LinkedList&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _se : StorageElement </td></tr>
<tr><td align="left" balign="left"> - _lastEstimatedValue : double </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + se() : StorageElement </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + registerSE(se : StorageElement) </td></tr>
<tr><td align="left" balign="left"> + deregisterSE() </td></tr>
<tr><td align="left" balign="left"> + lfn() : String </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + fileIndex() : int </td></tr>
<tr><td align="left" balign="left"> + lastEstimatedValue() : double </td></tr>
<tr><td align="left" balign="left"> + setLastEstimatedValue(value : double) </td></tr>
<tr><td align="left" balign="left"> + addPin() </td></tr>
<tr><td align="left" balign="left"> + releasePin() </td></tr>
<tr><td align="left" balign="left"> + isPinned() : boolean </td></tr>
<tr><td align="left" balign="left"> + isDeleteable() : boolean </td></tr>
<tr><td align="left" balign="left"> + createTime() : long </td></tr>
<tr><td align="left" balign="left"> + getLastAccessTime() : long </td></tr>
<tr><td align="left" balign="left"> + read() </td></tr>
<tr><td align="left" balign="left"> + cloneFile() : DataFile </td></tr>
		</table></td></tr>
		</table>>, URL="./DataFile.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.ComputingElement
	c274 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.ComputingElement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ComputingElement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ComputingElement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getSite() : GridSite </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getWorkerNodes() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + active() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + pauseCE() </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + unpauseCE() </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getStatistics() : Statistics </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getJobHandler() : JobHandler </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + iAm(index : int) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + shutDownCE() </font></td></tr>
		</table></td></tr>
		</table>>, URL="./ComputingElement.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.BinaryTree
	c275 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.BinaryTree" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BinaryTree.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BinaryTree </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - root : BinaryTree.Node </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - doInsert(v1 : int, v2 : int, codeOp : int, n : BinaryTree.Node) : BinaryTree.Node </td></tr>
<tr><td align="left" balign="left"> - doSearchNode(key : int, n : BinaryTree.Node) : BinaryTree.Node </td></tr>
<tr><td align="left" balign="left"> - doSearchPosition(key : int, n : BinaryTree.Node) : int </td></tr>
<tr><td align="left" balign="left"> - doMakeRanking(n1 : BinaryTree.Node, n2 : BinaryTree) </td></tr>
<tr><td align="left" balign="left"> - doComputeDistance(n1 : BinaryTree.Node, n2 : BinaryTree, c : NodeCounter) </td></tr>
<tr><td align="left" balign="left"> - doIntoArray(n : BinaryTree.Node, a : int[], c : NodeCounter) </td></tr>
<tr><td align="left" balign="left"> + searchNode(key : int) : BinaryTree.Node </td></tr>
<tr><td align="left" balign="left"> + searchPosition(key : int) : int </td></tr>
<tr><td align="left" balign="left"> + getFromHistory(v1 : int, v2 : int, codeOp : int) </td></tr>
<tr><td align="left" balign="left"> + makeRanking(root1 : BinaryTree) </td></tr>
<tr><td align="left" balign="left"> + computeDistance(root1 : BinaryTree, c : NodeCounter) </td></tr>
<tr><td align="left" balign="left"> + computeDistance(root1 : BinaryTree) : int </td></tr>
<tr><td align="left" balign="left"> + intoArray(a : int[]) </td></tr>
<tr><td align="left" balign="left"> + estimateFutureValueZipf(fileId : int, accessHistory : TreeMap&lt;&gt;) : double </td></tr>
<tr><td align="left" balign="left"> - searchFileId(rankingS : int[], fileId : int, t : BinaryTree) : int </td></tr>
		</table></td></tr>
		</table>>, URL="./BinaryTree.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.BinaryTree.Node
	c276 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.BinaryTree.Node" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BinaryTree.Node.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Node </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ firstKey : int </td></tr>
<tr><td align="left" balign="left"> ~ secondKey : int </td></tr>
<tr><td align="left" balign="left"> ~ left : BinaryTree.Node </td></tr>
<tr><td align="left" balign="left"> ~ right : BinaryTree.Node </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		</table>>, URL="./BinaryTree.Node.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.BandwidthReader
	c277 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.BandwidthReader" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BandwidthReader.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BandwidthReader </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _instance : BandwidthReader </td></tr>
<tr><td align="left" balign="left"> - bandwidthDataHash : Hashtable&lt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getInstance() : BandwidthReader </td></tr>
<tr><td align="left" balign="left"> - readDataFile(filename : String, site1 : GridSite, site2 : GridSite, timeZone : Integer) </td></tr>
<tr><td align="left" balign="left"> + getBandwidth(site1 : GridSite, site2 : GridSite, time : float) : BandwidthData </td></tr>
<tr><td align="left" balign="left"> + readConfigFile() </td></tr>
		</table></td></tr>
		</table>>, URL="./BandwidthReader.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.BandwidthFactory
	c278 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.BandwidthFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BandwidthFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> BandwidthFactory </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ getBandwidth(a : GridSite, b : GridSite, maxBandwidth : float) : Bandwidth </td></tr>
		</table></td></tr>
		</table>>, URL="./BandwidthFactory.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.BandwidthData
	c279 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.BandwidthData" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BandwidthData.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BandwidthData </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _mean : float </td></tr>
<tr><td align="left" balign="left"> - _stdev : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ getMean() : float </td></tr>
<tr><td align="left" balign="left"> ~ getStdev() : float </td></tr>
		</table></td></tr>
		</table>>, URL="./BandwidthData.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.Bandwidth
	c280 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.Bandwidth" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Bandwidth.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Bandwidth </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + addConnection() </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + dropConnection() </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + availableBandwidth() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + currentBandwidth() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + maxBandwidth() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + connectionCount() : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="./Bandwidth.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.infrastructure.BackgroundBandwidth
	c281 [label=<<table title="org.edg.data.replication.optorsim.infrastructure.BackgroundBandwidth" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BackgroundBandwidth.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BackgroundBandwidth </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _siteA : GridSite </td></tr>
<tr><td align="left" balign="left"> - _siteB : GridSite </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + availableBandwidth() : float </td></tr>
<tr><td align="left" balign="left"> + currentBandwidth() : float </td></tr>
<tr><td align="left" balign="left"> - getBackgroundBW() : float </td></tr>
		</table></td></tr>
		</table>>, URL="./BackgroundBandwidth.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.edg.data.replication.optorsim.infrastructure.SimpleBandwidth implements org.edg.data.replication.optorsim.infrastructure.Bandwidth
	c280:p -> c263:p [dir=back,arrowtail=empty,style=dashed];
	//org.edg.data.replication.optorsim.infrastructure.BackgroundBandwidth extends org.edg.data.replication.optorsim.infrastructure.SimpleBandwidth
	c263:p -> c281:p [dir=back,arrowtail=empty];
}

