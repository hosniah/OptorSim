#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_7_2-3-gee82a7 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="arial",fontsize=10,labelfontname="arial",labelfontsize=10];
	node [fontname="arial",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// org.edg.data.replication.optorsim.auctions.RFDStatusHandler
	c139 [label=<<table title="org.edg.data.replication.optorsim.auctions.RFDStatusHandler" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RFDStatusHandler.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RFDStatusHandler </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _receivedRFD : boolean </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
<tr><td align="left" balign="left"> + RFDTIMEOUT : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # messageReceived() </td></tr>
<tr><td align="left" balign="left"> # waitForRFD(winningBid : Bid) </td></tr>
		</table></td></tr>
		</table>>, URL="./RFDStatusHandler.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.StorageBroker
	c140 [label=<<table title="org.edg.data.replication.optorsim.auctions.StorageBroker" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./StorageBroker.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StorageBroker </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _nestedAuctions : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _currentReplications : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _auctionsBidIn : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _auctionsPendingReplication : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _messageQueue : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _iAmAlive : boolean </td></tr>
<tr><td align="left" balign="left"> - _se : StorageElement </td></tr>
<tr><td align="left" balign="left"> - _p2pMediator : P2P </td></tr>
<tr><td align="left" balign="left"> - _maxPrice : float </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> - standBy() </td></tr>
<tr><td align="left" balign="left"> + shutDownSB() </td></tr>
<tr><td align="left" balign="left"> + addMessage(msg : Message) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getSite() : GridSite </td></tr>
<tr><td align="left" balign="left"> + getLocalSE() : StorageElement </td></tr>
<tr><td align="left" balign="left"> + getMaxPrice() : float </td></tr>
<tr><td align="left" balign="left"> - handleBidRequestMessage(brm : Message) </td></tr>
<tr><td align="left" balign="left"> - isBidderIn(auction : Auction) : boolean </td></tr>
<tr><td align="left" balign="left"> - processAnnounceAsBidder(msg : AnnounceMessage) </td></tr>
<tr><td align="left" balign="left"> + auctionComplete(thisAuction : Auction, winningSB : StorageBroker) </td></tr>
<tr><td align="left" balign="left"> + fileAvailable(finishedAuction : Auction, winningFile : DataFile) </td></tr>
<tr><td align="left" balign="left"> - getBid(auction : Auction) : Bid </td></tr>
<tr><td align="left" balign="left"> - shouldStartNestedAuction(auction : Auction) : boolean </td></tr>
<tr><td align="left" balign="left"> - economicallyOptimalToReplicate(auction : Auction) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./StorageBroker.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.ReadyForDownloadMessage
	c141 [label=<<table title="org.edg.data.replication.optorsim.auctions.ReadyForDownloadMessage" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ReadyForDownloadMessage.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ReadyForDownloadMessage </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ _file : DataFile </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + file() : DataFile </td></tr>
<tr><td align="left" balign="left"> + handler(p2pMediator : P2P) </td></tr>
		</table></td></tr>
		</table>>, URL="./ReadyForDownloadMessage.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.PropagatingMessage
	c142 [label=<<table title="org.edg.data.replication.optorsim.auctions.PropagatingMessage" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./PropagatingMessage.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> PropagatingMessage </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _hopCount : int </td></tr>
<tr><td align="left" balign="left"> - _contactedSites : Set&lt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - shouldPropagateMsg() : boolean </td></tr>
<tr><td align="left" balign="left"> - decreaseHopCount() </td></tr>
<tr><td align="left" balign="left"> - addContactedSite(site : GridSite) </td></tr>
<tr><td align="left" balign="left"> - testAndSetHasContacted(site : GridSite) : boolean </td></tr>
<tr><td align="left" balign="left"> - propagateMsg(mediator : P2P) </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + handler(mediator : P2P) </td></tr>
		</table></td></tr>
		</table>>, URL="./PropagatingMessage.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.P2PManager
	c143 [label=<<table title="org.edg.data.replication.optorsim.auctions.P2PManager" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./P2PManager.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> P2PManager </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _P2PInstances : Map&lt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + find(site : GridSite) : P2P </td></tr>
<tr><td align="left" balign="left"> ~ register(site : GridSite, p2p : P2P) </td></tr>
<tr><td align="left" balign="left"> + shutdownAllStorageBrokers() </td></tr>
<tr><td align="left" balign="left"> + shutdownP2PThreads() </td></tr>
		</table></td></tr>
		</table>>, URL="./P2PManager.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.P2P
	c144 [label=<<table title="org.edg.data.replication.optorsim.auctions.P2P" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./P2P.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> P2P </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _storageBrokerCollection : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _messageQueue : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _auctionContacts : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _iAmAlive : boolean </td></tr>
<tr><td align="left" balign="left"> - _site : GridSite </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - standByForMessage() </td></tr>
<tr><td align="left" balign="left"> # acceptMessage(message : Message) </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> # sendMessage(message : Message, site : GridSite) </td></tr>
<tr><td align="left" balign="left"> + alreadyProcessed(auction : Auction) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeContact(auction : Auction) </td></tr>
<tr><td align="left" balign="left"> - getStorageBrokers() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getSite() : GridSite </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + sendToLocalSBs(msg : Message, includeOriginator : boolean) </td></tr>
<tr><td align="left" balign="left"> ~ shutDownAllSBs() </td></tr>
<tr><td align="left" balign="left"> + shutDownP2P() </td></tr>
		</table></td></tr>
		</table>>, URL="./P2P.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.Message
	c145 [label=<<table title="org.edg.data.replication.optorsim.auctions.Message" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Message.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> Message </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _auction : Auction </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getAuction() : Auction </td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> ~ handler(p2pMediator : P2P) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./Message.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.Debugger
	c146 [label=<<table title="org.edg.data.replication.optorsim.auctions.Debugger" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Debugger.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> Debugger </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _logFile : File </td></tr>
<tr><td align="left" balign="left"> - _out : PrintStream </td></tr>
<tr><td align="left" balign="left"> - _params : OptorSimParameters </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + initialise() </td></tr>
<tr><td align="left" balign="left"> + printDebugMessage(message : String) </td></tr>
<tr><td align="left" balign="left"> + printBids(mediatorName : String, auctionId : int, nestingLevel : int, bids : List&lt;&gt;) </td></tr>
		</table></td></tr>
		</table>>, URL="./Debugger.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.BidRequestMessage
	c147 [label=<<table title="org.edg.data.replication.optorsim.auctions.BidRequestMessage" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BidRequestMessage.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BidRequestMessage </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + handler(mediator : P2P) </td></tr>
		</table></td></tr>
		</table>>, URL="./BidRequestMessage.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.BidReplyMessage
	c148 [label=<<table title="org.edg.data.replication.optorsim.auctions.BidReplyMessage" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BidReplyMessage.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BidReplyMessage </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _bid : Bid </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getBid() : Bid </td></tr>
<tr><td align="left" balign="left"> + handler(p2pMediator : P2P) </td></tr>
		</table></td></tr>
		</table>>, URL="./BidReplyMessage.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.Bid
	c149 [label=<<table title="org.edg.data.replication.optorsim.auctions.Bid" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Bid.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Bid </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _storageBroker : StorageBroker </td></tr>
<tr><td align="left" balign="left"> - _networkCost : NetworkCost </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + storageBroker() : StorageBroker </td></tr>
<tr><td align="left" balign="left"> + getOffer() : float </td></tr>
		</table></td></tr>
		</table>>, URL="./Bid.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.AuctionThreadPool
	c150 [label=<<table title="org.edg.data.replication.optorsim.auctions.AuctionThreadPool" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AuctionThreadPool.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="arial italic"> AuctionThreadPool </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _MAX_SPARE_THREADS : int </td></tr>
<tr><td align="left" balign="left"> - _spareAuctionThreads : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _activeAuctionThreads : Set&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getThread(auction : Auction) : AuctionThread </td></tr>
<tr><td align="left" balign="left"> + killAllAuctions() </td></tr>
<tr><td align="left" balign="left"> - killAuctionThreads(threadSet : Set&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> # iShouldStayAlive(thread : AuctionThread) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./AuctionThreadPool.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.AuctionThread
	c151 [label=<<table title="org.edg.data.replication.optorsim.auctions.AuctionThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AuctionThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AuctionThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _threadCounter : int </td></tr>
<tr><td align="left" balign="left"> - _myAuction : Auction </td></tr>
<tr><td align="left" balign="left"> - _iAmAlive : boolean </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
<tr><td align="left" balign="left"> - _rfdStatusHandler : RFDStatusHandler </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ assignAuction(auction : Auction) </td></tr>
<tr><td align="left" balign="left"> + die() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="./AuctionThread.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.Auctioneer
	c152 [label=<<table title="org.edg.data.replication.optorsim.auctions.Auctioneer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Auctioneer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Auctioneer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getSite() : GridSite </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + getMaxPrice() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="arial italic" point-size="10.0"> + fileAvailable(auction : Auction, winningFile : DataFile) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./Auctioneer.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.Auction
	c153 [label=<<table title="org.edg.data.replication.optorsim.auctions.Auction" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Auction.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Auction </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _auctionIDCounter : int </td></tr>
<tr><td align="left" balign="left"> + MAX_NESTING_LEVEL : int </td></tr>
<tr><td align="left" balign="left"> - _winningFile : DataFile </td></tr>
<tr><td align="left" balign="left"> - _auctionID : int </td></tr>
<tr><td align="left" balign="left"> - _currentBids : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - _sampleDataFile : DataFile </td></tr>
<tr><td align="left" balign="left"> - _auctioneer : Auctioneer </td></tr>
<tr><td align="left" balign="left"> - _nestingLevel : int </td></tr>
<tr><td align="left" balign="left"> - _name : String </td></tr>
<tr><td align="left" balign="left"> - _params : OptorSimParameters </td></tr>
<tr><td align="left" balign="left"> - _rm : ReplicaManager </td></tr>
<tr><td align="left" balign="left"> - _destSE : StorageElement </td></tr>
<tr><td align="left" balign="left"> - _winningBid : Bid </td></tr>
<tr><td align="left" balign="left"> - _myRFDState : RFDStatusHandler </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + doAuction() </td></tr>
<tr><td align="left" balign="left"> + addBid(bid : Bid) </td></tr>
<tr><td align="left" balign="left"> + receiveRFDMessage(msg : ReadyForDownloadMessage) </td></tr>
<tr><td align="left" balign="left"> + getLFN() : String </td></tr>
<tr><td align="left" balign="left"> + getWinningFile() : DataFile </td></tr>
<tr><td align="left" balign="left"> + getSampleDataFile() : DataFile </td></tr>
<tr><td align="left" balign="left"> + getAuctioneer() : Auctioneer </td></tr>
<tr><td align="left" balign="left"> + getNestingLevel() : int </td></tr>
<tr><td align="left" balign="left"> + setIsReplicating(se : StorageElement) </td></tr>
<tr><td align="left" balign="left"> - getWinningBid() : Bid </td></tr>
<tr><td align="left" balign="left"> # assignRFDSH(rfdStatusHandler : RFDStatusHandler) </td></tr>
		</table></td></tr>
		</table>>, URL="./Auction.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.AnnounceMessage
	c154 [label=<<table title="org.edg.data.replication.optorsim.auctions.AnnounceMessage" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AnnounceMessage.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AnnounceMessage </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _winningSB : StorageBroker </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getWinningSB() : StorageBroker </td></tr>
<tr><td align="left" balign="left"> + handler(p2pMediator : P2P) </td></tr>
		</table></td></tr>
		</table>>, URL="./AnnounceMessage.html", fontname="arial", fontcolor="black", fontsize=10.0];
	// org.edg.data.replication.optorsim.auctions.AccessMediator
	c155 [label=<<table title="org.edg.data.replication.optorsim.auctions.AccessMediator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AccessMediator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AccessMediator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - _site : GridSite </td></tr>
<tr><td align="left" balign="left"> - _name : String </td></tr>
<tr><td align="left" balign="left"> - _winningFile : DataFile </td></tr>
<tr><td align="left" balign="left"> - _time : GridTime </td></tr>
<tr><td align="left" balign="left"> - _amSiteMap : Map&lt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + auction(lfn : String) : DataFile </td></tr>
<tr><td align="left" balign="left"> + getMaxPrice() : float </td></tr>
<tr><td align="left" balign="left"> + getSite() : GridSite </td></tr>
<tr><td align="left" balign="left"> + getLocalSE() : StorageElement </td></tr>
<tr><td align="left" balign="left"> + fileAvailable(a : Auction, winningFile : DataFile) </td></tr>
<tr><td align="left" balign="left"> + addAM(gsite : GridSite) </td></tr>
<tr><td align="left" balign="left"> + getAM(site : GridSite) : AccessMediator </td></tr>
		</table></td></tr>
		</table>>, URL="./AccessMediator.html", fontname="arial", fontcolor="black", fontsize=10.0];
	//org.edg.data.replication.optorsim.auctions.StorageBroker implements org.edg.data.replication.optorsim.auctions.Auctioneer
	c152:p -> c140:p [dir=back,arrowtail=empty,style=dashed];
	//org.edg.data.replication.optorsim.auctions.ReadyForDownloadMessage extends org.edg.data.replication.optorsim.auctions.Message
	c145:p -> c141:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.auctions.PropagatingMessage extends org.edg.data.replication.optorsim.auctions.Message
	c145:p -> c142:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.auctions.BidRequestMessage extends org.edg.data.replication.optorsim.auctions.PropagatingMessage
	c142:p -> c147:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.auctions.BidReplyMessage extends org.edg.data.replication.optorsim.auctions.Message
	c145:p -> c148:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.auctions.AnnounceMessage extends org.edg.data.replication.optorsim.auctions.PropagatingMessage
	c142:p -> c154:p [dir=back,arrowtail=empty];
	//org.edg.data.replication.optorsim.auctions.AccessMediator implements org.edg.data.replication.optorsim.auctions.Auctioneer
	c152:p -> c155:p [dir=back,arrowtail=empty,style=dashed];
}

